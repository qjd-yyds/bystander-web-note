import{_ as n,c as s}from"./app.56e16294.js";const a={},t=s(`<h1 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h1><h2 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> \u5C5E\u6027</h2><p>es6 \u65B0\u589E\u4E86 11 \u4E2A symbol\uFF0C\u53EB\u505A well-known symbol,\u4ED6\u4EEC\u90FD\u662F symbol \u5C5E\u6027\uFF0C\u6307\u5411\u8BED\u8A00\u5185\u90E8\u4F7F\u7528\u7684\u65B9\u6CD5\u6216\u8005\u5C5E\u6027\u3002\u4ED6\u4EEC\u53EF\u4EE5\u66F4\u6539\u8BED\u8A00\u7684\u539F\u751F\u884C\u4E3A</p><table><thead><tr><th>\u540D\u79F0</th><th>\u4F5C\u7528</th></tr></thead><tbody><tr><td>Symbol.hasInstance</td><td>instanceOf \u64CD\u4F5C\u7B26\u5185\u90E8\u5B9E\u73B0\u65B9\u6CD5</td></tr><tr><td>Symbol.isConcatSpreadable</td><td>\u5E03\u5C14\u503C\uFF0CArray.prototype.concat()\u662F\u5426\u9009\u62E9\u62C9\u5E73</td></tr><tr><td>Symbol.interator</td><td>\u8FD4\u56DE interator \u65B9\u6CD5</td></tr><tr><td>Symbol.match</td><td>String.prototype.match() \u7528\u6765\u6BD4\u8F83\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5</td></tr><tr><td>Symbol.replace</td><td>String.prototype.replace() \u7528\u6765\u66FF\u6362\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5</td></tr><tr><td>Symbol.search</td><td>String.prototype.search() \u7528\u6765\u5B9A\u4F4D\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5</td></tr><tr><td>Symbol.split</td><td>String.prototype.search() \u7528\u6765\u5207\u5272\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5</td></tr><tr><td>Symbol.species</td><td>\u7528\u6765\u521B\u5EFA\u884D\u751F\u5BF9\u8C61(derived object) \u65B9\u6CD5</td></tr><tr><td>Symbol.toPrimitive</td><td>\u8FD4\u56DE\u5BF9\u8C61\u539F\u59CB\u503C\u8868\u793A\u7684\u65B9\u6CD5</td></tr><tr><td>Symbol.toStringTag</td><td>Object.prototype.toString() \u521B\u5EFA\u5BF9\u8C61\u65F6\u63CF\u8FF0\u7684\u5B57\u7B26\u4E32</td></tr><tr><td>Symbol.unscopables</td><td>\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6307\u5B9A\u5728\u4F7F\u7528 with \u8BED\u53E5\u65F6\uFF0C\u4E0D\u5E94\u904D\u5386\u7684\u5C5E\u6027\u540D\u79F0\u96C6\u5408</td></tr></tbody></table><h2 id="symbol-hasinstance" tabindex="-1"><a class="header-anchor" href="#symbol-hasinstance" aria-hidden="true">#</a> Symbol.hasInstance</h2><p>\u6BCF\u4E2A\u51FD\u6570\u90FD\u6709 Symbol.hasInstance \u65B9\u6CD5\uFF0C\u7528\u6765\u5224\u65AD\u7ED9\u5B9A\u5BF9\u8C61\u662F\u5426\u662F\u8BE5\u51FD\u6570\u7684\u5B9E\u4F8B\uFF0C\u4ED6\u662F\u539F\u578B\u4E0A\u7684\u65B9\u6CD5</p><p>\u5728 js \u4E2D\u7684 instanceof \u53EF\u4EE5\u5224\u65AD\u8BE5\u5BF9\u8C61\u7684\u539F\u578B,\u4F46\u662F\u4E0D\u80FD\u5224\u65AD\u539F\u59CB\u7C7B\u578B\u7684\u539F\u578B\uFF0C\u59CB\u7EC8\u8FD4\u56DE <strong>false</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span> <span class="token comment">// false</span>
<span class="token string">&#39;1&#39;</span> <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token comment">// false</span>
<span class="token keyword">null</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token comment">// false</span>
<span class="token boolean">true</span> <span class="token keyword">instanceof</span> <span class="token class-name">Boolean</span> <span class="token comment">// false</span>

<span class="token comment">// \u4F7F\u7528 symbol.hasInstance \u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>Number<span class="token punctuation">,</span> Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> n <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="symbol-isconcatspreadable" tabindex="-1"><a class="header-anchor" href="#symbol-isconcatspreadable" aria-hidden="true">#</a> Symbol.isConcatSpreadable</h2><p>concat \u7528\u6765\u5408\u5E76\u4E24\u4E2A\u6216\u8005\u591A\u4E2A\u6570\u7EC4\uFF0C\u9ED8\u8BA4\u7684\u6570\u7EC4\u5143\u7D20\u662F\u5C55\u5F00\u7684\uFF0CSymbol.isConcatSpreadable \u7684\u503C\u4E3A undefined\u3002\u5982\u679C\u4E0D\u60F3\u5C55\u5F00\u53EF\u4EE5\u4F7F\u7528\u628A\u4ED6\u7684\u503C\u7F6E\u4E3A <strong>false</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// [&#39;a&#39;,&#39;b&#39;,1,2,3]</span>
a<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token comment">// undefined</span>
n<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token comment">// undefined</span>
n<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u4E0D\u8BA9n\u5C55\u5F00</span>
a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, [1, 2], 3]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u6269\u5C55</p><p>\u8BE5\u65B9\u6CD5\u5BF9\u7C7B\u6570\u7EC4\u4E5F\u9002\u7528\u3002</p><p>\u5408\u5E76\u7684\u65F6\u5019\u4F1A\u6839\u636E length \u7684\u503C\u8D85\u627E obj[0]\u81F3 obj[length - 1] \u7684\u503C\u8FDB\u884C\u5408\u5E76\uFF0C\u6240\u4EE5 obj \u4E5F\u8981\u6709 0 \u5230 length - 1 \u7684\u6570\u636E</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
  <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>
  <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u8BE5\u503C\u4E0D\u4F1A\u88AB\u5408\u5E76</span>
  <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token comment">// [&quot;abc&quot;,&#39;a&#39;,&#39;b&#39;]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,13);function p(e,o){return t}var l=n(a,[["render",p]]);export{l as default};
