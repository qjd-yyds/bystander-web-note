import{_ as n,e as s}from"./app.1f7b43e3.js";const a={},p=s(`<h2 id="\u672C\u8D28" tabindex="-1"><a class="header-anchor" href="#\u672C\u8D28" aria-hidden="true">#</a> \u672C\u8D28</h2><ul><li>\u6240\u8C13 watch\uFF0C\u672C\u8D28\u5C31\u662F\u5C31\u662F\u89C2\u6D4B\u4E00\u4E2A\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u5F53\u6570\u636E\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\uFF0C\u901A\u77E5\u5E76\u6267\u884C\u76F8\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u3002</li><li>\u5B9E\u9645\u4E0A\uFF0Cwatch \u7684\u5B9E\u73B0\u662F\u5229\u7528\u4E86 effect \u548C options.scheduler \u9009\u9879\u6765\u5B9E\u73B0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">effect</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">.</span>a
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53obj.a\u6570\u636E\u53D1\u751F\u53D8\u5316\uFF0C\u4F1A\u6267\u884Cscheduler\u51FD\u6570</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u7B80\u5355\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F53\u89E6\u53D1\u8BFB\u53D6foo\u7684\u65F6\u5019\uFF0C\u5EFA\u7ACB\u8054\u7CFB</span>
  <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> source<span class="token punctuation">.</span>foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u6570\u636E\u53D8\u5316\u89E6\u53D1cb\u56DE\u8C03\u51FD\u6570</span>
      <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u4E0A\u9762\u7684\u5B9E\u73B0\uFF0C\u53EA\u662F\u5BF9 obj.foo \u7684\u786C\u7F16\u7801\u8BFB\u53D6\u64CD\u4F5C\uFF0C\u4E3A\u4E86\u8BA9 watch \u51FD\u6570\u5177\u6709\u901A\u7528\u6027\uFF0C\u9700\u8981\u5C01\u88C5\u4E00\u4E2A\u8BFB\u53D6\u64CD\u4F5C</p></div><h2 id="\u901A\u7528\u8BFB\u53D6" tabindex="-1"><a class="header-anchor" href="#\u901A\u7528\u8BFB\u53D6" aria-hidden="true">#</a> \u901A\u7528\u8BFB\u53D6</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F53\u89E6\u53D1\u8BFB\u53D6foo\u7684\u65F6\u5019\uFF0C\u5EFA\u7ACB\u8054\u7CFB</span>
  <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">traverse</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u6570\u636E\u53D8\u5316\u89E6\u53D1cb\u56DE\u8C03\u51FD\u6570</span>
      <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u8BFB\u53D6\u7684\u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u6216\u8005\u5DF2\u7ECF\u88AB\u8BFB\u53D6\u8FC7\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6570\u636E\u6DFB\u52A0\u5230seen</span>
  seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token comment">// \u5047\u8BBEvalue\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4F7F\u7528forin\u8BFB\u53D6\u6BCF\u4E00\u4E2A\u503C</span>
  <span class="token comment">// \u9012\u5F52\u8C03\u7528traverse</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="\u63A5\u53D7\u4E00\u4E2A-getter" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53D7\u4E00\u4E2A-getter" aria-hidden="true">#</a> \u63A5\u53D7\u4E00\u4E2A getter</h2><p>watch \u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A getter\uFF0C\u5728 getter \u5185\u90E8\u53EF\u4EE5\u6307\u5B9A\u8BE5 watch \u9700\u8981\u4F9D\u8D56\u54EA\u4E9B\u54CD\u5E94\u6570\u636E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> source <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> source
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5F53\u89E6\u53D1\u8BFB\u53D6foo\u7684\u65F6\u5019\uFF0C\u5EFA\u7ACB\u8054\u7CFB</span>
  <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u6570\u636E\u53D8\u5316\u89E6\u53D1cb\u56DE\u8C03\u51FD\u6570</span>
      <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u8BFB\u53D6\u7684\u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u6216\u8005\u5DF2\u7ECF\u88AB\u8BFB\u53D6\u8FC7\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6570\u636E\u6DFB\u52A0\u5230seen</span>
  seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token comment">// \u5047\u8BBEvalue\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4F7F\u7528forin\u8BFB\u53D6\u6BCF\u4E00\u4E2A\u503C</span>
  <span class="token comment">// \u9012\u5F52\u8C03\u7528traverse</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="\u83B7\u5F97\u65B0\u503C\u548C\u65E7\u503C" tabindex="-1"><a class="header-anchor" href="#\u83B7\u5F97\u65B0\u503C\u548C\u65E7\u503C" aria-hidden="true">#</a> \u83B7\u5F97\u65B0\u503C\u548C\u65E7\u503C</h2><p>\u5982\u4F55\u83B7\u5F97\u65B0\u503C\u548C\u65E7\u503C\u5462\uFF0C\u8FD9\u91CC\u9700\u8981\u7528\u5230<code>lazy</code>\u8FD9\u4E2A\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> source <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> source
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> oldValue<span class="token punctuation">,</span> newValue
  <span class="token comment">// \u5F53\u89E6\u53D1\u8BFB\u53D6foo\u7684\u65F6\u5019\uFF0C\u5EFA\u7ACB\u8054\u7CFB</span>
  <span class="token keyword">const</span> effectFn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u91CD\u65B0\u6267\u884C\u526F\u4F5C\u7528\u5F97\u5230\u7684\u662F\u65B0\u503C</span>
      newValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token comment">// \u5F53\u6570\u636E\u53D8\u5316\u89E6\u53D1cb\u56DE\u8C03\u51FD\u6570</span>
      <span class="token function">cb</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span>
      oldValue <span class="token operator">=</span> newValue <span class="token comment">// \u66F4\u65B0\u65E7\u503C</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u624B\u52A8\u8C03\u7528\uFF0C\u62FF\u5230\u7684\u662F\u65E7\u503C</span>
  oldValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u8BFB\u53D6\u7684\u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u6216\u8005\u5DF2\u7ECF\u88AB\u8BFB\u53D6\u8FC7\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6570\u636E\u6DFB\u52A0\u5230seen</span>
  seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token comment">// \u5047\u8BBEvalue\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4F7F\u7528forin\u8BFB\u53D6\u6BCF\u4E00\u4E2A\u503C</span>
  <span class="token comment">// \u9012\u5F52\u8C03\u7528traverse</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="\u7ACB\u5373\u6267\u884C\u7684-watch" tabindex="-1"><a class="header-anchor" href="#\u7ACB\u5373\u6267\u884C\u7684-watch" aria-hidden="true">#</a> \u7ACB\u5373\u6267\u884C\u7684 watch</h2><p>\u5F53<code>immediate</code>\u9009\u9879\u4E3A true \u7684\u65F6\u5019\uFF0C\u56DE\u8C03\u51FD\u6570\u4F1A\u5728 watch \u521B\u5EFA\u7684\u65F6\u5019\u6267\u884C\u4E00\u6B21\u3002\u73B0\u5728\u628A scheduler \u63D0\u53D6\u51FA\u53BB</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> source <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> source
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> oldValue<span class="token punctuation">,</span> newValue
  <span class="token keyword">const</span> <span class="token function-variable function">obj</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u91CD\u65B0\u6267\u884C\u526F\u4F5C\u7528\u5F97\u5230\u7684\u662F\u65B0\u503C</span>
    newValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5F53\u6570\u636E\u53D8\u5316\u89E6\u53D1cb\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function">cb</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span>
    oldValue <span class="token operator">=</span> newValue <span class="token comment">// \u66F4\u65B0\u65E7\u503C</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5F53\u89E6\u53D1\u8BFB\u53D6foo\u7684\u65F6\u5019\uFF0C\u5EFA\u7ACB\u8054\u7CFB</span>
  <span class="token keyword">const</span> effectFn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">scheduler</span><span class="token operator">:</span> obj
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7B2C\u4E00\u6B21\u6267\u884Coldvalue\u80AF\u5B9A\u662Fundefined</span>
    <span class="token function">obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u624B\u52A8\u8C03\u7528\uFF0C\u62FF\u5230\u7684\u662F\u65E7\u503C</span>
    oldValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u8BFB\u53D6\u7684\u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u6216\u8005\u5DF2\u7ECF\u88AB\u8BFB\u53D6\u8FC7\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6570\u636E\u6DFB\u52A0\u5230seen</span>
  seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token comment">// \u5047\u8BBEvalue\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4F7F\u7528forin\u8BFB\u53D6\u6BCF\u4E00\u4E2A\u503C</span>
  <span class="token comment">// \u9012\u5F52\u8C03\u7528traverse</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h2 id="\u56DE\u8C03\u6267\u884C\u65F6\u673A" tabindex="-1"><a class="header-anchor" href="#\u56DE\u8C03\u6267\u884C\u65F6\u673A" aria-hidden="true">#</a> \u56DE\u8C03\u6267\u884C\u65F6\u673A</h2><p><code>flush</code>\u672C\u8D28\u662F\u8C03\u5EA6\u51FD\u6570\u7684\u6267\u884C\u65F6\u673A</p><ul><li>\u5F53 flush \u4E3A post \u7684\u65F6\u5019\uFF0C\u4EE3\u8868\u8C03\u5EA6\u51FD\u6570\u9700\u8981\u5C06\u526F\u4F5C\u7528\u51FD\u6570\u653E\u5728\u4E00\u4E2A\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\u53BB,\u7B49\u5F85 dom \u66F4\u65B0\u5B8C\u6210\u540E\u518D\u6267\u884C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> source <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> source
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> oldValue<span class="token punctuation">,</span> newValue
  <span class="token keyword">const</span> <span class="token function-variable function">obj</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u91CD\u65B0\u6267\u884C\u526F\u4F5C\u7528\u5F97\u5230\u7684\u662F\u65B0\u503C</span>
    newValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5F53\u6570\u636E\u53D8\u5316\u89E6\u53D1cb\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function">cb</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span>
    oldValue <span class="token operator">=</span> newValue <span class="token comment">// \u66F4\u65B0\u65E7\u503C</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5F53\u89E6\u53D1\u8BFB\u53D6foo\u7684\u65F6\u5019\uFF0C\u5EFA\u7ACB\u8054\u7CFB</span>
  <span class="token keyword">const</span> effectFn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>flush <span class="token operator">===</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u662Fpost\u653E\u5165\u5FAE\u4EFB\u52A1\u961F\u5217</span>
        <span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7B2C\u4E00\u6B21\u6267\u884Coldvalue\u80AF\u5B9A\u662Fundefined</span>
    <span class="token function">obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u624B\u52A8\u8C03\u7528\uFF0C\u62FF\u5230\u7684\u662F\u65E7\u503C</span>
    oldValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u8BFB\u53D6\u7684\u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u6216\u8005\u5DF2\u7ECF\u88AB\u8BFB\u53D6\u8FC7\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6570\u636E\u6DFB\u52A0\u5230seen</span>
  seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token comment">// \u5047\u8BBEvalue\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4F7F\u7528forin\u8BFB\u53D6\u6BCF\u4E00\u4E2A\u503C</span>
  <span class="token comment">// \u9012\u5F52\u8C03\u7528traverse</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><h2 id="\u8FC7\u671F\u7684\u526F\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u8FC7\u671F\u7684\u526F\u4F5C\u7528" aria-hidden="true">#</a> \u8FC7\u671F\u7684\u526F\u4F5C\u7528</h2><p>\u7ADE\u6001\u95EE\u9898\u901A\u5E38\u5728\u591A\u7EBF\u7A0B\u6216\u8005\u591A\u8FDB\u7A0B\u88AB\u63D0\u53CA\uFF0C\u4F46\u662F\u5728\u65E5\u5E38\u5DE5\u4F5C\u4E2D\u53EF\u80FD\u4F1A\u51FA\u73B0\u8FD9\u6837\u7684\u573A\u666F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> finalData
<span class="token function">watch</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/xxx&#39;</span><span class="token punctuation">)</span>
  finalData <span class="token operator">=</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u4E0A\u8FF0\u4EE3\u7801\u6CA1\u6709\u4EC0\u4E48\u95EE\u9898\uFF0C\u4F46\u662F\u5728\u6267\u884C\u7684\u65F6\u523B\uFF0C\u522B\u7684\u5730\u65B9\u4FEE\u6539\u4E86 obj \u7684\u503C\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u4E8C\u6B21\u8BF7\u6C42\u3002\u6B64\u65F6\u4E24\u4E2A\u8BF7\u6C42\u540C\u65F6\u8FDB\u884C\uFF0C\u54EA\u4E00\u4E2A\u5148\u8FD4\u56DE\uFF0C\u6211\u4EEC\u65E0\u6CD5\u786E\u5B9A</p></div><ul><li>\u7531\u4E8E B \u5728\u540E\u9762\u53D1\u9001\u8BF7\u6C42\uFF0C\u6211\u4EEC\u8BA4\u4E3A B \u662F\u6709\u6548\u7684\u3002A \u4EA7\u751F\u7684\u7ED3\u679C\u5E94\u8BE5\u662F\u65E0\u6548\u7684\u3002\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u8FC7\u671F\u624B\u6BB5</li><li>watch \u7684\u56DE\u8C03\u51FD\u6570\u63A5\u53D7\u7B2C\u4E09\u4E2A\u53C2\u6570<code>onInvalidate</code>,\u8FD9\u4E2A\u51FD\u6570\u4F1A\u5728\u5F53\u524D\u526F\u4F5C\u7528\u8FC7\u671F\u6267\u884C</li></ul><p>\u90A3\u4E48 vue \u662F\u5982\u4F55\u5B9E\u73B0\u7684\u5462</p><p>\u5728 watch \u5185\u90E8\u6BCF\u6B21\u68C0\u6D4B\u53D8\u66F4\u540E\uFF0C\u5728\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u8C03\u7528\u4E4B\u524D\uFF0C\u5148\u8C03\u7528\u6211\u4EEC\u901A\u8FC7<code>oninvalidate</code>\u51FD\u6570\u6CE8\u518C\u7684\u56DE\u8C03</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> source <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> source
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> cleanup <span class="token comment">// \u7528\u6765\u5B58\u50A8\u7528\u6237\u8FC7\u671F\u7684\u56DE\u8C03</span>
  <span class="token keyword">function</span> <span class="token function">onInvalidate</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C06\u8FC7\u671F\u56DE\u8C03\u653E\u5165cleanup</span>
    cleanup <span class="token operator">=</span> fn
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token function-variable function">obj</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u91CD\u65B0\u6267\u884C\u526F\u4F5C\u7528\u5F97\u5230\u7684\u662F\u65B0\u503C</span>
    newValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5728\u8C03\u7528\u56DE\u8C03\u4E4B\u524D\u5148\u8C03\u7528\u6CE8\u518C\u7684\u56DE\u8C03\u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cleanup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5F53\u6570\u636E\u53D8\u5316\u89E6\u53D1cb\u56DE\u8C03\u51FD\u6570</span>
    <span class="token function">cb</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span>
    oldValue <span class="token operator">=</span> newValue <span class="token comment">// \u66F4\u65B0\u65E7\u503C</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5F53\u89E6\u53D1\u8BFB\u53D6foo\u7684\u65F6\u5019\uFF0C\u5EFA\u7ACB\u8054\u7CFB</span>
  <span class="token keyword">const</span> effectFn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>flush <span class="token operator">===</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u662Fpost\u653E\u5165\u5FAE\u4EFB\u52A1\u961F\u5217</span>
        <span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7B2C\u4E00\u6B21\u6267\u884Coldvalue\u80AF\u5B9A\u662Fundefined</span>
    <span class="token function">obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u624B\u52A8\u8C03\u7528\uFF0C\u62FF\u5230\u7684\u662F\u65E7\u503C</span>
    oldValue <span class="token operator">=</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u8BFB\u53D6\u7684\u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u6216\u8005\u5DF2\u7ECF\u88AB\u8BFB\u53D6\u8FC7\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6570\u636E\u6DFB\u52A0\u5230seen</span>
  seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token comment">// \u5047\u8BBEvalue\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4F7F\u7528forin\u8BFB\u53D6\u6BCF\u4E00\u4E2A\u503C</span>
  <span class="token comment">// \u9012\u5F52\u8C03\u7528traverse</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p>\u4F7F\u7528\uFF0C\u7B2C\u4E00\u6B21\u4FEE\u6539 foo\uFF0C\u53D1\u9001\u8BF7\u6C42 A\uFF0C\u5728 200ms \u540E\u53D1\u9001\u8BF7\u6C42 B\uFF0C\u5047\u8BBE\u8BF7\u6C42 1000ms\uFF0C200ms \u4EE5\u540E\uFF0Cfoo \u53D8\u5316\uFF0C\u7740\u4F1A\u5BFC\u81F4 watch \u56DE\u8C03\u6267\u884C\uFF0C\u5728\u6267\u884C\u56DE\u8C03\u524D\u4F1A\u67E5\u770B\u662F\u5426\u5B58\u5728 onInvalidate\uFF0C\u7531\u4E8E\u7B2C\u4E00\u6B21\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u6CE8\u518C\u8FC7\uFF0C\u6240\u4EE5\u6267\u884C\u3002\u8FD9\u4E2A\u65F6\u5019\u7531\u4E8E\u95ED\u5305\u7684\u7279\u6027<code>expired</code>\u53D8\u4E3A true\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5F53\u8BF7\u6C42 A \u8FD4\u56DE\u7684\u65F6\u5019\uFF0C\u5176\u7ED3\u679C\u4F1A\u88AB\u629B\u5F03\u3002\u4ECE\u800C\u907F\u514D\u8FC7\u671F\u7684\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> finalData
<span class="token function">watch</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> onInvalidate</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> expired <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token function">onInvalidate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    expired <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/xxx&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>expired<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    finalData <span class="token operator">=</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u7B2C\u4E00\u6B21\u4FEE\u6539</span>
obj<span class="token punctuation">.</span>foo<span class="token operator">++</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 200ms\u540E\u7B2C\u4E8C\u6B21\u4FEE\u6539</span>
  obj<span class="token punctuation">.</span>foo<span class="token operator">++</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,31);function t(e,o){return p}var l=n(a,[["render",t]]);export{l as default};
