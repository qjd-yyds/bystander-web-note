import{_ as n,e as s}from"./app.1f7b43e3.js";const a={},p=s(`<h1 id="generator-\u7B14\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#generator-\u7B14\u8BD5\u9898" aria-hidden="true">#</a> generator \u7B14\u8BD5\u9898</h1><h2 id="\u8003\u5BDF-yield-next-\u65B9\u6CD5-\u5E26\u53C2\u6570\u7684-next-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8003\u5BDF-yield-next-\u65B9\u6CD5-\u5E26\u53C2\u6570\u7684-next-\u65B9\u6CD5" aria-hidden="true">#</a> \u8003\u5BDF yield\uFF0Cnext \u65B9\u6CD5\uFF0C\u5E26\u53C2\u6570\u7684 next \u65B9\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8003\u5BDFyield\uFF0Cnext\u65B9\u6CD5\uFF0C\u5E26\u53C2\u6570\u7684next\u65B9\u6CD5</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token string">&#39;a&#39;</span>
  <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">yield</span> a <span class="token operator">+</span> <span class="token string">&#39;b&#39;</span>
  <span class="token keyword">return</span> b
<span class="token punctuation">}</span>
<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {done:false,value:&#39;a&#39;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//  {done:false,value:&#39;cb&#39;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {done:true,value:undefined} // \u6CA1\u6709yield \u6240\u4EE5\u662Fundefined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u8003\u5BDF-yield-for-of-\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u8003\u5BDF-yield-for-of-\u904D\u5386" aria-hidden="true">#</a> \u8003\u5BDF yield* for of \u904D\u5386</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u8003\u5BDF yield* for of \u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">gen1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;a&#39;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;b&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">gen2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">gen1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u4E2A\u4F1A\u4EA4\u51FA\u63A7\u5236\u6743</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;c&#39;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;d&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">gen3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">gen1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u53EA\u4F1A\u6267\u884C\uFF0C\u4F46\u662F\u6CA1\u6709\u4EA4\u51FA\u63A7\u5236\u6743</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;c&#39;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;d&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> g2 <span class="token operator">=</span> <span class="token function">gen2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> g3 <span class="token operator">=</span> <span class="token function">gen3</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> g2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;a&#39; , &#39;b&#39;, &#39;c&#39; ,&#39;d&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> g3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&#39;c&#39; &#39;d&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="\u8003\u5BDF\u751F\u6210\u5668\u7ED3\u5408-promise" tabindex="-1"><a class="header-anchor" href="#\u8003\u5BDF\u751F\u6210\u5668\u7ED3\u5408-promise" aria-hidden="true">#</a> \u8003\u5BDF\u751F\u6210\u5668\u7ED3\u5408 promise</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u751F\u6210\u5668\u7ED3\u5408promise</span>
<span class="token keyword">function</span> <span class="token function">genP</span><span class="token punctuation">(</span><span class="token parameter">d1<span class="token punctuation">,</span> d2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token function">genP</span><span class="token punctuation">(</span><span class="token string">&#39;yes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;no&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD4\u56DE{ value\uFF1A Promise(&lt;fulfilled&gt;:&quot;yes&quot;),done:false}</span>
  <span class="token keyword">yield</span> <span class="token function">genP</span><span class="token punctuation">(</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;n&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD4\u56DE{ value\uFF1A Promise(&lt;fulfilled&gt;:&quot;y&quot;),done:false}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// Promise(&lt;fulfilled&gt;:&quot;yes&quot;) \uFF0C Promise(&lt;fulfilled&gt;:&quot;y&quot;)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span>
    result<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">run</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>`,7);function t(e,o){return p}var l=n(a,[["render",t]]);export{l as default};
