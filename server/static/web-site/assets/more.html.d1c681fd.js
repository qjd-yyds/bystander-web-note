import{_ as t,r as e,o,a as c,b as n,f as l,F as u,e as s,d as a}from"./app.1f7b43e3.js";const i={},r=s('<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> javascript</h1><h2 id="\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u636E\u7C7B\u578B</h2><h3 id="js-\u4E2D\u4EC0\u4E48\u662F\u57FA\u7840\u6570\u636E\u7C7B\u578B\u4EC0\u4E48\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#js-\u4E2D\u4EC0\u4E48\u662F\u57FA\u7840\u6570\u636E\u7C7B\u578B\u4EC0\u4E48\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> js \u4E2D\u4EC0\u4E48\u662F\u57FA\u7840\u6570\u636E\u7C7B\u578B\u4EC0\u4E48\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B</h3><ul><li><strong>\u57FA\u7840\u6570\u636E\u7C7B\u578B</strong> Number String Boolean Null Symbol bigInt</li><li><strong>\u5F15\u7528\u6570\u636E\u7C7B\u578B</strong> Object \u7C7B\u578B \u7EC6\u5206\u7684\u8BDD Object Array Date Function Regexp</li></ul><h3 id="\u4ED6\u4EEC\u662F\u600E\u4E48\u5B58\u50A8\u7684" tabindex="-1"><a class="header-anchor" href="#\u4ED6\u4EEC\u662F\u600E\u4E48\u5B58\u50A8\u7684" aria-hidden="true">#</a> \u4ED6\u4EEC\u662F\u600E\u4E48\u5B58\u50A8\u7684</h3><p>\u57FA\u672C\u6570\u636E\u7C7B\u578B\u5B58\u5728<strong>\u6808\u5185\u5B58</strong>\u91CC\uFF0C\u5F15\u7528\u6570\u636E\u7C7B\u578B\u5B58\u5728<strong>\u5806\u5185\u5B58</strong>\u4E2D\uFF0C\u6808\u4E2D\u4FDD\u5B58\u7740\u6570\u636E\u5F15\u7528\u7684\u5730\u5740\uFF0C\u8FD9\u4E2A\u5F15\u7528\u5730\u5740\u6307\u5411\u5BF9\u5E94\u7684\u6570\u636E\uFF0C\u4EE5\u4FBF\u66F4\u597D\u67E5\u627E\u5806\u5185\u5B58\u7684\u6570\u636E</p><hr><p>\u987A\u4FBF\u4E00\u63D0\uFF0C\u6808\u5185\u5B58\u662F\u81EA\u52A8\u5206\u914D\u5185\u5B58\uFF0C\u5806\u5185\u5B58\u662F\u52A8\u6001\u5206\u914D\u5185\u5B58\u7684\uFF0C\u4E0D\u4F1A\u81EA\u52A8\u91CA\u653E\uFF0C\u6240\u4EE5\u4F7F\u7528\u5BF9\u8C61\uFF0C\u5982\u679C\u4E0D\u9700\u8981\u4E86\u9700\u8981\u624B\u52A8\u7F6E\u4E3A null \u6765\u91CA\u653E\u5185\u5B58</p><h2 id="\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u7C7B\u578B\u8F6C\u6362</h2><h3 id="\u4E3A\u4EC0\u4E48-0-1-0-2-0-3" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-0-1-0-2-0-3" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48 0.1 + 0.2 &gt; 0.3</h3><p>\u5728 js \u4E2D\u6D6E\u70B9\u6570 \u4F7F\u7528 64 \u4F4D\u56FA\u5B9A\u957F\u5EA6\u6765\u5B58\u50A8\uFF0C\u5176\u4E2D<strong>1 \u4F4D\u8868\u793A\u7B26\u53F7\u4F4D\uFF0C11 \u4F4D\u8868\u793A\u6307\u6570\u4F4D\uFF0C52 \u4F4D\u5C3E\u6570\u4F4D</strong> \u53EA\u6709 52 \u4F4D\u8868\u793A\u5C3E\u6570\u4F4D</p>',11),k=a("js \u8FD0\u7B97\u4F1A\u5148\u8F6C\u6210\u4E8C\u8FDB\u5236\u8FD0\u7B97 \u518D\u8F6C\u6362\u6210 10 \u8FDB\u5236 "),b={href:"https://jingyan.baidu.com/article/425e69e6e93ca9be15fc1626.html",target:"_blank",rel:"noopener noreferrer"},m=a("10 \u8FDB\u5236\u8F6C\u6210 2 \u8FDB\u5236\u65B9\u6CD5"),d=s(`<p>0.1 \u4E8C\u8FDB\u5236\u8F6C\u6362 ==&gt; 0.000110011001100\uFF081100 \u5FAA\u73AF\uFF09</p><p>0.2 \u4E8C\u8FDB\u5236\u8F6C\u6362 ==&gt; 0.001100110011001(0011 \u5FAA\u73AF)</p><p>0.1 + 0.2 ==&gt;\u8F6C\u6362\u6210\u4E8C\u8FDB\u5236 0.0100110011001100110011001100110011001100110011001100111 ==&gt; \u8F6C\u6362\u6210\u5341\u8FDB\u5236 0.300000004</p><p>\u5BF9\u4E8E\u6BD4\u8F83\u5927\u5C0F\u53EF\u4EE5\u63D0\u4F9B\u4E00\u4E2A\u6D6E\u70B9\u7CBE\u5EA6\u8BEF\u5DEE\u8303\u56F4 Number.EPSILON ?= Math.pow(2,-52)</p><h3 id="\u4E3A\u4EC0\u4E48-0-2-0-3-0-5" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-0-2-0-3-0-5" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48 0.2 + 0.3 = 0.5</h3><p>\u56E0\u4E3A 0.2 + 0.3 \u8F6C\u6210\u4E8C\u8FDB\u5236\u540E\u5C3E\u6570\u4F4D\u5927\u4E8E 52 \u4F4D\uFF0Cjs \u53EA\u53D6 52 \u4F4D\u6240\u4EE5\u52A0\u8D77\u6765\u4E8C\u8FDB\u5236\u4E3A 0.1000000000000000000000000000000000000000000000000000</p><p>0.2 \u548C 0.3 \u8F6C\u6362\u6210\u4E8C\u8FDB\u5236 \u5C3E\u6570\u4F4D\u521A\u597D 52 \u4F4D \u76F8\u52A0\u80AF\u5B9A\u5927\u4E8E 52 \u4F4D\uFF0C\u6070\u597D\u524D 52 \u4F4D\u4E3A 0 \u6240\u4EE5\u622A\u53D6\u540E\u4E3A 0.1000000000000000000000000000000000000000000000000000 \u4E5F\u5C31\u662F 0 + 1 * 2^-1 = 0.5</p><h3 id="\u65E2\u7136-0-1-\u4E0D\u662F-0-1-\u4E86-console-log-0-1-\u8FD8\u662F-0-1" tabindex="-1"><a class="header-anchor" href="#\u65E2\u7136-0-1-\u4E0D\u662F-0-1-\u4E86-console-log-0-1-\u8FD8\u662F-0-1" aria-hidden="true">#</a> \u65E2\u7136 0.1 \u4E0D\u662F 0.1 \u4E86\uFF0Cconsole.log(0.1) \u8FD8\u662F 0.1</h3><p>\u56E0\u4E3A console.log(0.1) \u4F1A\u8FDB\u884C\u4E8C\u8FDB\u5236\u8F6C\u6362\uFF0C\u518D\u8F6C\u6210\u5341\u8FDB\u5236\uFF0C\u7136\u540E\u8F6C\u6210\u5B57\u7B26\u4E32\uFF0C\u6700\u540E\u6253\u5370\u51FA\u6765\u4E00\u4E2A\u8FD1\u4F3C\u503C</p><h2 id="\u5224\u65AD\u6570\u636E\u7C7B\u578B\u6709\u51E0\u79CD\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u6570\u636E\u7C7B\u578B\u6709\u51E0\u79CD\u65B9\u6CD5" aria-hidden="true">#</a> \u5224\u65AD\u6570\u636E\u7C7B\u578B\u6709\u51E0\u79CD\u65B9\u6CD5</h2><ul><li><p><strong>typeof</strong> \u7F3A\u70B9 typeof null \u4E3A object \u65E0\u6CD5\u533A\u5206 null \u8FD8\u662F object</p><ul><li>typeof undefind // undefined</li><li>typeof &#39;10&#39; // string</li><li>typeof 10 // number</li><li>typeof false // boolean</li><li>typeof Symbol() // symbol</li><li>typeof Function // function</li><li>typeof null // object</li><li>typeof [] // object</li><li>typeof {} // object</li></ul></li><li><p><strong>instanceof</strong> \u7F3A\u70B9\u53EA\u80FD\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u5B58\u5728\u76EE\u6807\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E0A\u9762</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1 <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false \u4E0D\u80FD\u5224\u65AD\u5B57\u9762\u91CF\u57FA\u672C\u6570\u636E\u7C7B\u578B</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><strong>constructor</strong></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> e <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;kanke&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[nbc]at</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f Number() {[native code]}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Number</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Uncaught SyntaxError: Invalid or unexpected token</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Function</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Date</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Array</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// RegExp</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u57FA\u672C\u7C7B\u578B\u5224\u65AD\u4E0D\u4E86\uFF0C\u4E0D\u662F\u6784\u9020\u51FD\u6570 TypeError: Cannot read properties of null (reading &#39;constructor&#39;)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li><strong>Object.prototype.toString.call()</strong></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">test</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Null]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>undefind<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Undefind]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Number]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object String]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Boolean]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Funtion]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Date]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Date]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Array]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Array]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object RegExp]&#39;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;[object Object]&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="\u624B\u5199\u4E00\u4E2A-instanceof" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199\u4E00\u4E2A-instanceof" aria-hidden="true">#</a> \u624B\u5199\u4E00\u4E2A instanceof</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u539F\u7406\u67E5\u627E\u539F\u578B\u4E0A\u6570\u636E</span>
<span class="token keyword">function</span> <span class="token function">myInstanceof</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">R</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token constant">RP</span> <span class="token operator">=</span> <span class="token class-name">R</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token constant">LP</span> <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">LP</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">LP</span> <span class="token operator">===</span> <span class="token constant">RP</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token constant">LP</span> <span class="token operator">=</span> <span class="token constant">LP</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">myInstance</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> Object<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u4E3A\u4EC0\u4E48-typeof-null-\u4E3A-object" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-typeof-null-\u4E3A-object" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48 typeof null \u4E3A object</h2><p>\u5728 javascript \u4E2D\u4E0D\u540C\u7684\u5BF9\u8C61\u90FD\u662F\u4E8C\u8FDB\u5236\u5B58\u50A8\u7684\uFF0C\u5982\u679C\u4E8C\u8FDB\u5236\u524D\u4E09\u4F4D\u662F 000 \u90A3\u4E48 js \u5C31\u5224\u65AD\u4ED6\u662F object \u7C7B\u578B\uFF0Cnull \u7684\u4E8C\u8FDB\u5236\u5168\u662F 0\uFF0C\u6240\u4EE5\u5224\u65AD\u4E3A object \u8FD9\u4E2A bug \u662F js \u8BDE\u751F\u65F6\u4EA7\u751F\u7684 bug</p><ul><li>000 \u5BF9\u8C61</li><li>010 \u53CC\u7CBE\u5EA6\u7C7B\u578B</li><li>100 \u5B57\u7B26\u4E32\u7C7B\u578B</li><li>110 \u5E03\u5C14\u7C7B\u578B</li></ul><h2 id="\u548C-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u548C-\u7684\u533A\u522B" aria-hidden="true">#</a> == \u548C===\u7684\u533A\u522B</h2><p>=== \u662F\u4E25\u683C\u76F8\u7B49\uFF0C\u6BD4\u8F83\u503C\u548C\u7C7B\u578B</p><p>== \u662F\u975E\u4E25\u683C\u76F8\u7B49\uFF0C\u6BD4\u8F83\u89C4\u5219</p><ul><li>Null == Undefind true</li><li>String == Number \u5148\u628A string \u8F6C\u6210 number \u518D\u6BD4\u8F83\u5927\u5C0F</li><li>Boolean == Number \u5148\u5427 Boolean \u8F6C\u6210 number \u518D\u6BD4\u8F83</li><li>Object == String,Number,Symbol =&gt;Object \u8F6C\u6362\u6210\u539F\u59CB\u7C7B\u578B</li></ul><h2 id="\u624B\u5199-call-apply-bind" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199-call-apply-bind" aria-hidden="true">#</a> \u624B\u5199 call apply bind</h2><ul><li>call \u7684\u5B9E\u73B0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9996\u5148\u5224\u65AD\u4ED6\u662F\u4E0D\u662F\u4E00\u4E2A\u51FD\u6570</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;not a function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5B58\u50A8\u5F53\u524D\u7684this\u6307\u5411,\u5982\u679C\u5F53\u524D\u6CA1\u4F20\u5165\u9ED8\u8BA4\u6307\u5411window</span>
  context <span class="token operator">=</span> context <span class="token operator">||</span> window<span class="token punctuation">;</span>
  <span class="token comment">// \u5B58\u50A8\u5F53\u524D\u7684\u51FD\u6570</span>
  context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token comment">// \u622A\u53D6\u4F20\u5165\u7684\u53C2\u6570\uFF0C\u4FDD\u5B58</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6267\u884C\u8FD9\u4E2A\u65B9\u6CD5</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>apply \u7684\u5B9E\u73B0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;not a function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  context <span class="token operator">=</span> context <span class="token operator">||</span> window<span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result<span class="token punctuation">;</span>
  <span class="token comment">// \u4F20\u5165\u7684\u662F\u4E00\u4E2A\u6570\u7EC4\u6240\u4EE5\u5224\u65AD\u662F\u5426\u7A7F\u53C2</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>\u5B9E\u73B0 bind</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;\u5FC5\u987B\u662F\u4E00\u4E2Afunction&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> _this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// \u9700\u8981\u88ABbind\u8C03\u7528\u7684\u51FD\u6570</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// bind\u9700\u8981\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9996\u5148\u5224\u65AD\u8FD9\u4E2Afn\u662F\u4E0D\u662Fnew\u5B9E\u4F8B\u5316\u7684\uFF0C\u65B0\u521B\u5EFA\u7684\u5B9E\u4F8B\u9700\u8981\u5427prototype\u6DFB\u52A0\u5230_this.proptotype</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u524D\u662Fnew\u7684</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_this</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">_this</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="\u5B57\u9762\u91CF\u521B\u5EFA\u5BF9\u8C61\u548C-new-\u521B\u5EFA\u7684\u5BF9\u8C61\u6709\u4EC0\u4E48\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u5B57\u9762\u91CF\u521B\u5EFA\u5BF9\u8C61\u548C-new-\u521B\u5EFA\u7684\u5BF9\u8C61\u6709\u4EC0\u4E48\u533A\u522B" aria-hidden="true">#</a> \u5B57\u9762\u91CF\u521B\u5EFA\u5BF9\u8C61\u548C new \u521B\u5EFA\u7684\u5BF9\u8C61\u6709\u4EC0\u4E48\u533A\u522B</h2><p>\u5B57\u9762\u91CF\u521B\u5EFA\u7684\u5BF9\u8C61\u66F4\u52A0\u65B9\u4FBF\uFF0C\u4E0D\u9700\u8981\u50CF new \u521B\u5EFA\u7684\u5BF9\u8C61\u4E00\u4E2A\u4E2A\u521B\u5EFA key\uFF0C\u65B9\u4FBF\u9605\u8BFB\uFF0C \u4E0D\u9700\u8981\u4F5C\u7528\u57DF\u89E3\u6790\uFF0C\u901F\u5EA6\u66F4\u52A0\u5FEB</p><h2 id="\u5B9E\u73B0\u4E00\u4E2A-new" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E00\u4E2A-new" aria-hidden="true">#</a> \u5B9E\u73B0\u4E00\u4E2A new</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myNew</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61</span>
  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6539\u53D8\u5BF9\u8C61\u7684\u539F\u578B\u6307\u5411</span>
  obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> fn<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>

  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">?</span> result <span class="token operator">:</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u4EC0\u4E48\u662F\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u4F5C\u7528\u57DF</h2><p>\u53D8\u91CF\u548C\u51FD\u6570\u53EF\u6267\u884C\u7684\u8303\u56F4\u79F0\u4E3A\u4F5C\u7528\u57DF \u4F5C\u7528\u57DF\u662F\u4E00\u5957\u89C4\u5219\uFF0C\u786E\u5B9A\u4E86\u5728\u4F55\u5904\u548C\u5982\u4F55\u67E5\u627E\u8FD9\u4E9B\u53D8\u91CF\uFF0C\u5982\u679C\u67E5\u627E\u7684\u76EE\u7684\u662F\u8D4B\u503C\uFF0C\u90A3\u4E48\u4F1A\u8FDB\u884C LHS \u67E5\u8BE2\uFF0C\u5982\u679C\u662F\u83B7\u53D6\u503C\u4F1A\u8FDB\u884C RHS \u67E5\u627E\uFF0C\u8D4B\u503C\u64CD\u4F5C\u7B26\u4F1A\u8FDB\u884C LHS \u67E5\u627E\uFF0C=\u64CD\u4F5C\u7B26\u6216\u8005\u51FD\u6570\u8C03\u7528\u65F6\u4F20\u5165\u7684\u503C\u4F1A\u89E6\u53D1\u5173\u8054\u4F5C\u7528\u57DF\u7684\u8D4B\u503C\u64CD\u4F5C\u3002</p><p>js \u5F15\u64CE\u5728\u4EE3\u7801\u6267\u884C\u524D\u5BF9\u5176\u7F16\u8BD1\uFF0C\u5728\u8FD9\u4E2A\u9636\u6BB5 var a = 2 \u4F1A\u88AB\u5206\u89E3\u6210\u4E24\u4E2A\u72EC\u7ACB\u6B65\u9AA4</p><ul><li>var a \u5728\u5176\u4F5C\u7528\u57DF\u58F0\u660E\u53D8\u91CF\uFF0C\u4F1A\u5728\u6700\u5F00\u59CB\u7684\u9636\u6BB5\uFF0C\u4EE3\u7801\u6267\u884C\u524D\u8FDB\u884C</li><li>a = 2 \u4F1A\u8FDB\u884C LHS \u7684\u67E5\u8BE2\u53D8\u91CF a\uFF0C\u5E76\u5BF9\u5176\u8FDB\u884C\u8D4B\u503C</li></ul><p>LHS \u67E5\u8BE2\u548C RHS \u67E5\u8BE2\u4F1A\u5728\u5F53\u524D\u4F5C\u7528\u57DF\u6267\u884C,\u5982\u679C\u6709\u9700\u8981\u4F1A\u50CF\u4E0A\u4E00\u5C42\u4F5C\u7528\u57DF\u7EE7\u7EED\u67E5\u627E\u76EE\u6807\u6807\u8BC6\u7B26\uFF0C\u8FD9\u6837\u6BCF\u6B21\u5411\u4E0A\u6267\u884C\u6700\u540E\u62B5\u8FBE\u5168\u5C40\u4F5C\u7528\u57DF\uFF08\u9876\u5C42\uFF09\uFF0C\u65E0\u8BBA\u6709\u6CA1\u6709\u627E\u5230\u90FD\u4F1A\u505C\u6B62</p><p>\u4E0D\u6210\u529F\u7684 RHS \u5F15\u7528\u4F1A\u62A5 ReferenceError \u5F02\u5E38\uFF0C\u4E0D\u6210\u529F\u7684 LHS \u5F15\u7528\u4F1A\u9690\u5F0F\u521B\u5EFA\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\uFF0C\u628A\u5F53\u524D LHS \u7684\u76EE\u6807\u5F15\u7528\u4F5C\u4E3A\u6807\u8BC6\u7B26\u3002\u4E25\u683C\u6A21\u5F0F\u4E0B\u629B\u51FA ReferenceError</p><h2 id="\u6267\u884C\u6808-\u6267\u884C\u4E0A\u4E0B\u6587" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u6808-\u6267\u884C\u4E0A\u4E0B\u6587" aria-hidden="true">#</a> \u6267\u884C\u6808 \u6267\u884C\u4E0A\u4E0B\u6587</h2><p>\u5148\u8FDB\u540E\u51FA\uFF0C\u5F53\u8FDB\u5165\u4E00\u4E2A\u6267\u884C\u73AF\u5883\u5C31\u4F1A\u521B\u5EFA\u4ED6\u7684\u6267\u884C\u4E0A\u4E0B\u6587\uFF0C\u7136\u540E\u538B\u6808\uFF0C\u5F53\u6267\u884C\u5B8C\u6210\u540E\u4F1A\u9500\u6BC1\u4ED6\u7684\u4E0A\u4E0B\u6587\uFF0C\u8FDB\u884C\u5F39\u6808\uFF0C\u6808\u5E95\u6C38\u8FDC\u662F\u5168\u5C40\u73AF\u5883\u7684\u4E0A\u4E0B\u6587\uFF0C\u6808\u9876\u662F\u5F53\u524D\u6B63\u5728\u6267\u884C\u7684\u73AF\u5883\u4E0A\u4E0B\u6587\uFF0C\u6D4F\u89C8\u5668\u5173\u95ED\u7684\u65F6\u5019\u5168\u5C40\u6267\u884C\u4E0A\u4E0B\u6587\u624D\u4F1A\u5F39\u6808</p><h2 id="\u4EC0\u4E48\u662F\u95ED\u5305-\u95ED\u5305\u6709\u4EC0\u4E48\u4F5C\u7528-\u95ED\u5305\u7684\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u95ED\u5305-\u95ED\u5305\u6709\u4EC0\u4E48\u4F5C\u7528-\u95ED\u5305\u7684\u5E94\u7528" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u95ED\u5305\uFF0C\u95ED\u5305\u6709\u4EC0\u4E48\u4F5C\u7528\uFF0C\u95ED\u5305\u7684\u5E94\u7528</h2><ul><li>\u4EC0\u4E48\u662F</li></ul><p>\u95ED\u5305\u662F\u57FA\u4E8E\u8BCD\u6CD5\u4F5C\u7528\u57DF\u4E66\u5199\u4EE3\u7801\u4EE3\u7801\u65F6\uFF0C\u5FC5\u7136\u4F1A\u4EA7\u751F\u7684\u81EA\u7136\u7ED3\u679C\uFF0C\u5F53\u51FD\u6570\u8BB0\u4F4F\u5E76\u8BBF\u95EE\u6240\u5728\u7684\u8BCD\u6CD5\u4F5C\u7528\u57DF\u5C31\u5F62\u6210\u7684\u95ED\u5305\uFF0C\u5373\u4F7F\u51FD\u6570\u5728\u5F53\u524D\u8BCD\u6CD5\u4F5C\u7528\u57DF\u4E4B\u5916\u6267\u884C\uFF0C\u4E5F\u53EF\u4EE5\u8BBF\u95EE\u5B9A\u4E49\u65F6\u5019\u7684\u8BCD\u6CD5\u4F5C\u7528\u57DF</p><ul><li>\u4F5C\u7528</li></ul><p>\u4FDD\u62A4;\u907F\u514D\u547D\u540D\u51B2\u7A81;\u4FDD\u5B58;\u89E3\u51B3\u5FAA\u73AF\u7ED1\u5B9A\u5F15\u53D1\u7684\u7D22\u5F15\u95EE\u9898;\u53D8\u91CF\u4E0D\u4F1A\u9500\u6BC1;\u53EF\u4EE5\u4F7F\u7528\u51FD\u6570\u5185 \u90E8\u7684\u53D8\u91CF\uFF0C\u4F7F\u53D8\u91CF\u4E0D\u4F1A\u88AB\u5783\u573E\u56DE\u6536\u673A\u5236\u56DE\u6536</p><ul><li>\u5E94\u7528 <ul><li>\u5728\u5B9A\u65F6\u5668\u3001\u4E8B\u4EF6\u76D1\u542C\u5668</li><li>Ajax \u8BF7\u6C42\u3001\u8DE8\u7A97\u53E3\u901A\u4FE1\u3001Web Workers \u6216\u8005\u4EFB\u4F55\u5176\u4ED6\u7684\u5F02\u6B65\uFF08\u6216\u8005\u540C\u6B65\uFF09\u4EFB\u52A1\u4E2D</li><li>\u53EA\u8981\u4F7F\u7528\u4E86\u56DE\u8C03\u51FD\u6570\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u5728\u4F7F\u7528\u95ED\u5305\uFF01</li></ul></li></ul><h2 id="\u4EC0\u4E48\u662F\u539F\u578B-\u539F\u578B\u94FE" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u539F\u578B-\u539F\u578B\u94FE" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u539F\u578B\uFF0C\u539F\u578B\u94FE</h2><p>\u9996\u5148\u662F\u4E00\u4E2A[[prototype]]\uFF0C\u6BCF\u4E00\u4E2A\u5BF9\u8C61\u5728\u521B\u5EFA\u7684\u65F6\u5019\u90FD\u4F1A\u88AB\u8D4B\u4E88\u4E00\u4E2A\u975E\u7A7A\u7684\u503C\uFF0C\u5F53\u7136\u4E5F\u4E0D\u662F\u7EDD\u5BF9\u7684\uFF0C\u8FD8\u662F\u6709\u88AB\u8D4B\u4E88\u7A7A\u7684\u3002</p><p>\u5BF9\u4E8E\u9ED8\u8BA4\u7684[[get]]\u6765\u8BF4\uFF0C\u5982\u679C\u6CA1\u6709\u67E5\u627E\u5230\u5F53\u524D\u7684\u5C5E\u6027\uFF0C\u4F1A\u5728[[prototype]]\u4E0A\u67E5\u627E\uFF0C\u76F4\u5230\u627E\u4E0D\u5230\u4E3A\u6B62\u8FD4\u56DE undefined</p><p>\u6240\u6709\u7684\u6784\u9020\u51FD\u6570\u7684\u9690\u5F0F\u539F\u578B\u6307\u5411 Function \u7684\u539F\u578B</p><p>Object \u7684\u9690\u5F0F\u539F\u578B\u6307\u5411 null</p><p>\u6240\u6709\u7684\u5B9E\u4F8B<strong>proto</strong> \u6307\u5411\u5F53\u524D\u6784\u9020\u51FD\u6570\u7684 prototype\uFF0C\u56E0\u4E3A prototype \u90FD\u662F\u5BF9\u8C61\uFF0C\u4E5F\u6307\u5411 Object \u7684 prototype</p><h2 id="js-\u91CC\u7684\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#js-\u91CC\u7684\u7EE7\u627F" aria-hidden="true">#</a> js \u91CC\u7684\u7EE7\u627F</h2><ul><li>\u539F\u578B\u7EE7\u627F</li></ul><p>\u901A\u8FC7 Object.create \u521B\u5EFA\u4E00\u4E2A prototype \u6307\u5411\u7EE7\u627F\u7684\u5BF9\u8C61\uFF0C\u7F3A\u70B9\u5171\u4EAB\u53CC\u65B9\u6570\u636E\uFF0C\u5E76\u4E14\u65E0\u6CD5\u8FDB\u884C\u53C2\u6570\u4F20\u9012</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  friend
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u5BC4\u751F\u5F0F\u7EE7\u627F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Father</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>hobby <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\u5531&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8DF3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rap&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Father</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u901A\u8FC7new\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\u6765\u6A21\u62DF</span>
<span class="token comment">// \u4FEE\u6539\u6784\u9020\u6307\u5411</span>
<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Son<span class="token punctuation">;</span>
<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token string">&#39;\u6D4B\u8BD5&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>\u5BC4\u751F\u7EC4\u5408\u5F0F\u7EE7\u627F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Father</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>hobby <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\u5531&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8DF3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rap&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Father</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Father</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u901A\u8FC7\u59D4\u6258\u884C\u4E3A\u6539\u53D8\u4ED6\u7684prototype</span>
<span class="token class-name">Son</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Son<span class="token punctuation">;</span> <span class="token comment">// \u6784\u9020\u51FD\u6570\u53D8\u66F4\u6210\u81EA\u5DF1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>extends</li></ul><p>\u5176\u5B9E\u662F\u5BC4\u751F\u5F0F\u7EE7\u627F\u7684\u4E00\u4E2A\u8BED\u6CD5\u7CD6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span>
  <span class="token comment">// son.prototype.__proto__ = Father.prototype</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ==&gt;Father.call(this,2000)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5185\u5B58\u6CC4\u6F0F\u548C\u5783\u573E\u56DE\u6536\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#\u5185\u5B58\u6CC4\u6F0F\u548C\u5783\u573E\u56DE\u6536\u673A\u5236" aria-hidden="true">#</a> \u5185\u5B58\u6CC4\u6F0F\u548C\u5783\u573E\u56DE\u6536\u673A\u5236</h2><h3 id="\u4EC0\u4E48\u662F" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F" aria-hidden="true">#</a> \u4EC0\u4E48\u662F</h3><p>\u6CA1\u6709\u7528\u5230\u7684\u6570\u636E\u6CA1\u6709\u88AB\u53CA\u65F6\u91CA\u653E\u51FA\u6765\uFF0C\u5BFC\u81F4\u8BE5\u5185\u5B58\u65E0\u6CD5\u88AB\u4F7F\u7528\uFF0C\u5C31\u662F\u5185\u5B58\u6CC4\u6F0F</p><h3 id="\u4E3A\u4EC0\u4E48\u4F1A\u5BFC\u81F4\u6CC4\u6F0F" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u4F1A\u5BFC\u81F4\u6CC4\u6F0F" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u4F1A\u5BFC\u81F4\u6CC4\u6F0F</h3><p>\u5F53\u6211\u4EEC\u65E0\u6CD5\u901A\u8FC7 js \u8BBF\u95EE\u5BF9\u8C61\uFF0C\u4F46\u662F\u5783\u573E\u56DE\u6536\u673A\u5236\u786E\u8BA4\u4E3A\u6539\u6570\u636E\u6B63\u5728\u88AB\u5F15\u7528\uFF0C\u5783\u573E\u56DE\u6536\u4E0D\u4F1A\u91CA\u653E\u8BE5\u5BF9\u8C61\uFF0C\u5BFC\u81F4\u8BE5\u5185\u5B58\u65E0\u6CD5\u88AB\u91CA\u653E\uFF0C\u79EF\u5C11\u6210\u591A\uFF0C\u6700\u7EC8\u5BFC\u81F4\u7A0B\u5E8F\u5D29\u6E83</p><h3 id="\u5783\u573E\u56DE\u6536\u7684\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#\u5783\u573E\u56DE\u6536\u7684\u7B56\u7565" aria-hidden="true">#</a> \u5783\u573E\u56DE\u6536\u7684\u7B56\u7565</h3><ul><li><p>\u6807\u8BB0\u6E05\u9664\u6CD5</p><p>\u56DE\u6536\u673A\u5236\u901A\u8FC7\u83B7\u53D6\u6839\u6807\u8BB0\u4ED6\u4EEC\uFF0C\u7136\u540E\u8BBF\u95EE\u5E76\u6807\u8BB0\u6240\u6709\u6765\u81EA\u4ED6\u7684\u5F15\u7528\uFF0C\u7136\u540E\u8BBF\u95EE\u8FD9\u4E9B\u5BF9\u8C61\u5E76\u4E14\u6807\u8BB0\u4ED6\u4EEC\u7684\u5F15\u7528\uFF0C\u5982\u6B64\u53CD\u590D\uFF0C\u5982\u679C\u53D1\u73B0\u6CA1\u6709\u88AB\u5F15\u7528\u7684\u5C31\u5220\u9664\uFF0C\u8FDB\u5165\u6267\u884C\u73AF\u5883\u7684\u4E0D\u5220\u9664</p></li><li><p>\u5F15\u7528\u8BA1\u6570\u6CD5</p></li></ul><p>\u5F53\u6307\u660E\u4E00\u4E2A\u53D8\u91CF\u5E76\u4E14\u7ED9\u8FD9\u4E2A\u53D8\u91CF\u8D4B\u503C\u4E00\u4E2A\u5F15\u7528\u7C7B\u578B\u7684\u503C\u7684\u65F6\u5019\uFF0C\u8BE5\u503C\u7684\u8BA1\u6570+1\u3002\u8FD9\u4E2A\u503C\u518D\u6B21\u8D4B\u503C\u7ED9\u522B\u7684\u503C\u7684\u65F6\u5019\uFF0C\u518D\u6B21+1\uFF0C\u5F53\u8BE5\u503C\u88AB\u522B\u7684\u503C\u53D6\u4EE3\u7684\u65F6\u5019\uFF0C-1\u3002\u5F53\u6280\u672F\u4E3A 0 \u7684\u65F6\u5019\uFF0C\u5C31\u65E0\u6CD5\u8BBF\u95EE\u8FD9\u4E2A\u503C\uFF0C\u5783\u573E\u56DE\u6536\u673A\u5236\u56DE\u6536\u8FD9\u4E2A\u5BF9\u8C61</p><h2 id="\u624B\u5199\u6DF1\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199\u6DF1\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u624B\u5199\u6DF1\u6D45\u62F7\u8D1D</h2><ul><li>\u6D45\u62F7\u8D1D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a1</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">a2</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">a10</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">a11</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token literal-property property">a111</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">a1111</span><span class="token operator">:</span> <span class="token number">123123</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token string">&#39;123&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B9\u6CD51</span>
<span class="token keyword">function</span> <span class="token function">shallowClone1</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> o<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65B9\u6CD52</span>
<span class="token keyword">const</span> shallowObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj1 <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u65B9\u6CD53</span>
<span class="token keyword">const</span> shallowObj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ul><li>\u6DF1\u62F7\u8D1D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B80\u6613\u7248\u5B58\u5728\u7684\u95EE\u9898\u6CA1\u6709\u8FDB\u884C\u7C7B\u578B\u6821\u9A8C,\u5982\u6570\u7EC4 map set weakset weakmap</span>
<span class="token keyword">function</span> <span class="token function">deepClone1</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> i <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> o<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8FDB\u9636\u7248LV2</span>
<span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Object]&#39;</span> <span class="token operator">||</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5148\u5224\u65AD\u662F\u4E0D\u662F\u6570\u7EC4\u548C\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> o<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> o<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u53EF\u80FD\u78B0\u5230\u5FAA\u73AF\u5F15\u7528 \u5982 var a = {} a.a = a ,\u589E\u52A0\u4E00\u4E2A\u5FAA\u73AF\u76D1\u6D4BLv3</span>
<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> o<span class="token punctuation">;</span>
  <span class="token comment">// \u5224\u65AD\u5F53\u524D\u7684\u6570\u636E\u5728\u7F13\u5B58\u4E2D\u662F\u5426\u5B58\u5728\uFF0C\u5B58\u5728\u5C31\u53D6\u7F13\u5B58</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hash<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> hash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> obj <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  hash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> o<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> a1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c1</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">c2</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c21</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">c22</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token string">&#39;asd&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// Lv4 \u9012\u5F52\u5BB9\u6613\u51FA\u73B0\u7206\u6808\uFF0C\u91C7\u7528\u6DF1\u5EA6\u4F18\u5148\u7B97\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> loopList <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">parent</span><span class="token operator">:</span> result<span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> o
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>loopList<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> node <span class="token operator">=</span> loopList<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u79FB\u9664\u6700\u540E\u4E00\u9879</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> parent<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token keyword">let</span> anopar <span class="token operator">=</span> parent<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> key <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      anopar <span class="token operator">=</span> parent<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        loopList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">parent</span><span class="token operator">:</span> anopar<span class="token punctuation">,</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
          <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        anopar<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><h2 id="\u4E3A\u4EC0\u4E48-js-\u662F\u5355\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-js-\u662F\u5355\u7EBF\u7A0B" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48 js \u662F\u5355\u7EBF\u7A0B</h2><p>\u56E0\u4E3A js \u91CC\u5B58\u5728 dom \u64CD\u4F5C\uFF0C\u5982\u679C\u662F\u591A\u7EBF\u7A0B\u7684\u8BDD\uFF0C\u8FDB\u884C dom \u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u5728\u5220\u9664 dom \u4E00\u4E2A\u7EBF\u7A0B\u5728\u7F16\u8F91 dom\uFF0C\u6D4F\u89C8\u5668\u4E0D\u77E5\u9053\u542C\u8C01\u7684\uFF0C\u53EF\u80FD\u4F1A\u5BFC\u81F4\u6570\u636E\u6DF7\u4E71</p><h2 id="\u5982\u4F55\u5B9E\u73B0\u5F02\u6B65\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5B9E\u73B0\u5F02\u6B65\u7F16\u7A0B" aria-hidden="true">#</a> \u5982\u4F55\u5B9E\u73B0\u5F02\u6B65\u7F16\u7A0B</h2><ul><li>\u56DE\u8C03\u51FD\u6570</li><li>generator \u53CA\u5176\u9636\u6BB5\u53D8\u5316</li></ul><p>\u751F\u6210\u5668\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u6765\u8FD4\u56DE\u8FED\u4EE3\u5668</p><p>\u8C03\u7528\u751F\u6210\u5668\u540E\u4E0D\u4F1A\u7ACB\u5373\u6267\u884C\uFF0C\u800C\u662F\u901A\u8FC7\u8FED\u4EE3\u5668\u4E00\u6B65\u6B65\u63A7\u5236\u751F\u6210\u5668\u8FDB\u884C</p><p>\u8FED\u4EE3\u5668\u8C03\u7528 next \u65B9\u6CD5\u6765\u8BF7\u6C42\u4E00\u4E2A\u4E2A\u7684\u503C\uFF0C\u8FD4\u56DE\u503C \u4E00\u4E2A\u662F value \u4E00\u4E2A\u6570 done\uFF0C\u5982\u679C\u4E3A true \u8868\u793A\u751F\u6210\u5668\u6267\u884C\u5B8C\u6210\uFF0C\u540E\u7EED\u518D\u6B21\u6267\u884C next \u8FD4\u56DE\u503C\u662F\u4E00\u4E2A undefined</p><p>\u6CA1\u5230\u6267\u884C\u5230 yield \u7684\u65F6\u5019\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u65F6\u5019\u751F\u6210\u5668\u5904\u4E8E\u4E00\u4E2A\u975E\u963B\u585E\u7684\u72B6\u6001\uFF0C\u5F53\u518D\u6B21\u6267\u884C next \u4F1A\u4ECE\u6302\u8D77\u72B6\u6001\u5230\u6267\u884C\u72B6\u6001\uFF0C\u7EE7\u7EED\u4E0A\u4E00\u6B21\u7684\u72B6\u6001</p><p>\u76F4\u5230\u6CA1\u6709 yield\uFF0C\u8FD4\u56DE value:undefined done true</p><h2 id="promise-\u539F\u7406-\u624B\u5199-promise-\u548C-promise-all" tabindex="-1"><a class="header-anchor" href="#promise-\u539F\u7406-\u624B\u5199-promise-\u548C-promise-all" aria-hidden="true">#</a> promise \u539F\u7406 \u624B\u5199 promise \u548C promise.all</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B80\u6613\u7248</span>
<span class="token keyword">class</span> <span class="token class-name">MyPromise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u5B58\u5F53\u524Dvalue resolve</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6210\u529F\u7684\u6570\u7EC4</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>successCb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5931\u8D25</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>failCb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>successCb<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">f</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>failCb <span class="token operator">=</span> reason<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>failCb<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">f</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>successCb<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>failCb<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h2 id="\u5FAE\u4EFB\u52A1\u548C\u5B8F\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u5FAE\u4EFB\u52A1\u548C\u5B8F\u4EFB\u52A1" aria-hidden="true">#</a> \u5FAE\u4EFB\u52A1\u548C\u5B8F\u4EFB\u52A1</h2><ul><li>\u5FAE\u4EFB\u52A1</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>promise.then process.nextTick Object.observe MutationObserver
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>\u5B8F\u4EFB\u52A1</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>script settimeout setinterval setimmediate
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u5B8F\u4EFB\u52A1\u548C\u5FAE\u4EFB\u52A1\u7684\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u5B8F\u4EFB\u52A1\u548C\u5FAE\u4EFB\u52A1\u7684\u6267\u884C" aria-hidden="true">#</a> \u5B8F\u4EFB\u52A1\u548C\u5FAE\u4EFB\u52A1\u7684\u6267\u884C</h2><ul><li>\u5148\u6267\u884Cscript\u5B8F\u4EFB\u52A1</li><li>\u8FDB\u5165script\u540E\uFF0C\u6240\u6709\u7684\u540C\u6B65\u4EFB\u52A1\u4E3B\u7EBF\u7A0B\u6267\u884C</li><li>\u6240\u6709\u5B8F\u4EFB\u52A1\u8FDB\u5165\u5B8F\u4EFB\u52A1\u961F\u5217</li><li>\u6240\u6709\u7684\u5FAE\u4EFB\u52A1\u8FDB\u5165\u5FAE\u4EFB\u52A1\u961F\u5217</li><li>\u5148\u6E05\u7A7A\u5FAE\u4EFB\u52A1\u961F\u5217</li><li>\u518D\u53D6\u4E00\u4E2A\u5B8F\u4EFB\u52A1\uFF0C\u6267\u884C\uFF0C\u518D\u6E05\u7A7A\u5FAE\u4EFB\u52A1\u961F\u5217</li><li>\u4F9D\u6B21\u5FAA\u73AF</li></ul>`,98);function y(f,h){const p=e("ExternalLinkIcon");return o(),c(u,null,[r,n("p",null,[k,n("strong",null,[n("a",b,[m,l(p)])])]),d],64)}var g=t(i,[["render",y]]);export{g as default};
