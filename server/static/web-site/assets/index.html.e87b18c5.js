import{_ as n,c as s}from"./app.56e16294.js";var a="/web-site/assets/linked-list.8b87beac.jpg";const p={},t=s('<h1 id="\u94FE\u8868-linkedlist" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868-linkedlist" aria-hidden="true">#</a> \u94FE\u8868(LinkedList)</h1><h2 id="\u6570\u7EC4\u7684\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7684\u7F3A\u70B9" aria-hidden="true">#</a> \u6570\u7EC4\u7684\u7F3A\u70B9</h2><ul><li>\u5927\u591A\u6570\u8BED\u8A00\u7684\u6570\u7EC4\u521B\u5EFA\u9700\u8981\u7533\u8BF7\u4E00\u6BB5\u8FDE\u7EED\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u5E76\u4E14\u5927\u5C0F\u662F\u56FA\u5B9A\u7684\uFF0C\u5982\u679C\u5F53\u524D\u5185\u5B58\u4E0D\u6EE1\u8DB3\u5BB9\u91CF\u9700\u6C42\uFF0C\u9700\u8981\u6269\u5BB9(\u7533\u8BF7\u66F4\u5927\u7684\u6570\u7EC4\uFF0C\u5C06\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u590D\u5236\u5230\u65B0\u7684\u6570\u7EC4)</li><li>\u6570\u7EC4\u5F00\u5934\u6216\u8005\u4E2D\u95F4\u63D2\u5165\u7684\u6210\u672C\u5F88\u9AD8\uFF0C\u9700\u8981\u5927\u91CF\u5143\u7D20\u7684\u4F4D\u79FB</li></ul><h2 id="\u94FE\u8868\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u662F\u4EC0\u4E48" aria-hidden="true">#</a> \u94FE\u8868\u662F\u4EC0\u4E48</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u94FE\u8868\u4E5F\u53EF\u4EE5\u5B58\u50A8\u6570\u636E\uFF0C\u94FE\u8868\u4E2D\u7684\u5143\u7D20\u5728\u5185\u5B58\u4E2D\u4E0D\u5FC5\u662F\u8FDE\u7EED\u7684\uFF0C\u6BCF\u4E00\u4E2A\u5143\u7D20\u5B58\u50A8\u7740\u5143\u7D20\u672C\u8EAB\u548C\u6307\u5411\u4E0B\u4E00\u4E2A\u5143\u7D20\u7684\u5F15\u7528\uFF08\u6709\u4E9B\u8BED\u8A00\u53EB\u6307\u9488\uFF09</p></div><p><img src="'+a+`" alt="\u94FE\u8868"></p><p>\u76F8\u6BD4\u6570\u7EC4\u7684\u4F18\u70B9</p><ul><li>\u5185\u5B58\u4E0D\u662F\u8FDE\u7EED\u7684\uFF0C\u53EF\u4EE5\u5145\u5206\u5229\u7528\u8BA1\u7B97\u673A\u7684\u5185\u5B58\uFF0C\u5B9E\u73B0<strong>\u5185\u5B58\u52A8\u6001\u7BA1\u7406</strong></li><li>\u94FE\u8868\u4E0D\u5B58\u5728\u521B\u5EFA\u5C31\u786E\u5B9A\u5927\u5C0F\uFF0C\u5927\u5C0F\u53EF\u4EE5\u65E0\u7EBF\u5EF6\u4F38\u4E0B\u53BB</li><li>\u94FE\u8868\u63D2\u5165\u5220\u9664\uFF0C<strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong>\u53EF\u4EE5\u8FBE\u5230 O(1),\u6548\u7387\u9AD8</li></ul><p>\u7F3A\u70B9</p><ul><li>\u8BBF\u95EE\u4EFB\u4F55\u5143\u7D20\uFF0C\u90FD\u9700\u8981<strong>\u4ECE\u5934\u8BBF\u95EE</strong></li><li>\u65E0\u6CD5\u901A\u8FC7\u4E0B\u6807\u76F4\u63A5\u8BBF\u95EE\u5143\u7D20\uFF0C\u53EA\u80FD\u4ECE\u5934\u4E00\u4E2A\u4E2A\u8BBF\u95EE</li></ul><h2 id="\u94FE\u8868\u5E38\u89C1\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u5E38\u89C1\u7684\u65B9\u6CD5" aria-hidden="true">#</a> \u94FE\u8868\u5E38\u89C1\u7684\u65B9\u6CD5</h2><ul><li>append(element) \u5C3E\u90E8\u6DFB\u52A0\u9879</li><li>insert(position,element) \u7279\u5B9A\u7684\u4F4D\u7F6E\u6DFB\u52A0\u9879</li><li>get(position) \u83B7\u53D6\u5BF9\u5E94\u4F4D\u7F6E\u7684\u5143\u7D20</li><li>indexOf(element) \u8FD4\u56DE\u5143\u7D20\u5728\u5217\u8868\u7684\u7D22\u5F15\uFF0C\u6CA1\u6709\u8FD4\u56DE-1</li><li>update(position,element) \u4FEE\u6539\u67D0\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20</li><li>removeAt(position) \u79FB\u9664\u7279\u5B9A\u4F4D\u7F6E\u5143\u7D20</li><li>remove(element) \u79FB\u9664\u4E00\u9879</li><li>isEmpty() \u5224\u65AD\u94FE\u8868\u662F\u5426\u4E3A\u7A7A</li><li>size() \u8FD4\u56DE\u94FE\u8868\u7684\u5927\u5C0F</li><li>toString() \u8FD4\u56DE\u94FE\u8868\u5185\u5BB9</li></ul><h2 id="\u5355\u9879\u94FE\u8868\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u5355\u9879\u94FE\u8868\u5C01\u88C5" aria-hidden="true">#</a> \u5355\u9879\u94FE\u8868\u5C01\u88C5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8282\u70B9\u7C7B</span>
  <span class="token keyword">function</span> <span class="token function">Node</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token comment">// append(element) \u5C3E\u90E8\u6DFB\u52A0\u9879</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">append</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA\u65B0\u8282\u70B9</span>
    <span class="token keyword">var</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u662F\u7B2C\u4E00\u4E2A\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E0D\u662F\u6700\u540E\u4E00\u4E2A\u8282\u70B9</span>
      <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u627E\u5230\u6700\u540E\u4E00\u4E2A\u8282\u70B9</span>
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      <span class="token punctuation">}</span>
      <span class="token comment">// \u8FD9\u4E2A\u65F6\u5019\u7684current\u662F\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u7684next\uFF0C\u4E14\u4E3A\u7A7A</span>
      <span class="token comment">// \u8D4B\u503C\u4E3A\u521B\u5EFA\u7684\u8282\u70B9</span>
      current<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// insert(position,element) \u7279\u5B9A\u7684\u4F4D\u7F6E\u6DFB\u52A0\u9879</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">insert</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">position<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FB9\u754C\u5224\u65AD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token keyword">var</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u662F0 \u63D2\u5165\u9996\u4F4D</span>
      newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token keyword">var</span> previous <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// current\u8D4B\u503C\u524D\u7684\u5143\u7D20\u590D\u5236\u7ED9previous</span>
        previous <span class="token operator">=</span> current
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      <span class="token punctuation">}</span>
      newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> current
      previous<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// get(position) \u83B7\u53D6\u5BF9\u5E94\u4F4D\u7F6E\u7684\u5143\u7D20</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">position</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8D8A\u754C\u5224\u65AD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token comment">// \u83B7\u53D6\u4FE1\u606F</span>
    <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
    <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> current<span class="token punctuation">.</span>data
  <span class="token punctuation">}</span>
  <span class="token comment">// indexOf(element) \u8FD4\u56DE\u5143\u7D20\u5728\u5217\u8868\u7684\u7D22\u5F15\uFF0C\u6CA1\u6709\u8FD4\u56DE-1</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">indexOf</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u524D\u7684\u503C</span>
    <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
    <span class="token comment">// \u5F53\u524D\u7684\u4E0B\u6807</span>
    <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">// \u5F00\u59CB\u67E5\u627E</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>data <span class="token operator">===</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> index
      <span class="token punctuation">}</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      index<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// update(position,element) \u4FEE\u6539\u67D0\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">position<span class="token punctuation">,</span> newData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8D8A\u754C\u5224\u65AD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">// \u67E5\u627E\u6B63\u786E\u8282\u70B9</span>
    <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
    <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span>
    current<span class="token punctuation">.</span>data <span class="token operator">=</span> newData
  <span class="token punctuation">}</span>
  <span class="token comment">// removeAt(position) \u79FB\u9664\u7279\u5B9A\u4F4D\u7F6E\u5143\u7D20</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">removeAt</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">position</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FB9\u754C\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> position <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u627E\u5230\u9700\u8981\u5220\u9664\u7684\u5143\u7D20</span>
      <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
      <span class="token comment">// \u9700\u8981\u5220\u9664\u7684\u5143\u7D20\u7684\u524D\u4E00\u4E2A</span>
      <span class="token keyword">var</span> previous <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>index<span class="token operator">++</span> <span class="token operator">&lt;</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        previous <span class="token operator">=</span> current
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      <span class="token punctuation">}</span>
      previous<span class="token punctuation">.</span>next <span class="token operator">=</span> current<span class="token punctuation">.</span>next
      <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token operator">--</span>
      <span class="token keyword">return</span> current<span class="token punctuation">.</span>data
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// remove(element) \u79FB\u9664\u4E00\u9879</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">remove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> position <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeAt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// isEmpty()</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">isEmpty</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// size()</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">size</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
  <span class="token comment">// toString()</span>
  <span class="token class-name">LinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head
    <span class="token keyword">var</span> listString <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      listString <span class="token operator">+=</span> current<span class="token punctuation">.</span>data
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> listString
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6D4B\u8BD5append</span>
list<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
list<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
list<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>
list<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;aa&#39;</span><span class="token punctuation">)</span>
list<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;bb&#39;</span><span class="token punctuation">)</span>
list<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">)</span>
<span class="token function">alert</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br></div></div>`,14);function e(o,c){return t}var r=n(p,[["render",e]]);export{r as default};
