import{_ as n,e as s}from"./app.1f7b43e3.js";const a={},p=s(`<h1 id="generator-\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#generator-\u751F\u6210\u5668" aria-hidden="true">#</a> generator \u751F\u6210\u5668</h1><h2 id="\u8FED\u4EE3\u5668-iterator" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668-iterator" aria-hidden="true">#</a> \u8FED\u4EE3\u5668 iterator</h2><p>\u4EA7\u51FA\u4E00\u4E2A next \u65B9\u6CD5\uFF0C\u6267\u884C\u8FD4\u56DE\u7ED3\u679C\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token parameter">items</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> done <span class="token operator">=</span> i <span class="token operator">&gt;=</span> items<span class="token punctuation">.</span>length
      value <span class="token operator">=</span> done <span class="token operator">?</span> undefind <span class="token operator">:</span> items<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        done<span class="token punctuation">,</span>
        value
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> done <span class="token operator">=</span> i <span class="token operator">&gt;=</span> keys<span class="token punctuation">.</span>length
      value <span class="token operator">=</span> done <span class="token operator">?</span> undefind <span class="token operator">:</span> that<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        done<span class="token punctuation">,</span>
        value
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u53EF\u8FED\u4EE3\u534F\u8BAE</p><ul><li>[Symbol.iterator] \u5C5E\u6027</li><li>\u5185\u7F6E\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61 string array map set</li></ul><h2 id="generator-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#generator-\u51FD\u6570" aria-hidden="true">#</a> generator \u51FD\u6570</h2><ul><li>es6 \u5F02\u6B65\u7F16\u7A0B\u65B9\u6848</li><li>\u4F7F\u7528 function*</li><li>\u8FD4\u56DE\u503C\uFF1A\u7B26\u5408\u53EF\u8FED\u4EE3\u534F\u8BAE\u548C\u8FED\u4EE3\u5668\u534F\u8BAE\u7684\u751F\u6210\u5668\u5BF9\u8C61</li><li>\u53EF\u4EE5\u5728\u6267\u884C\u5904\u6682\u505C\uFF0C\u53C8\u80FD\u4ECE\u6682\u505C\u5904\u6267\u884C \u4F7F\u7528 yield \u5173\u952E\u5B57</li></ul><h2 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h2><ul><li>next(param) <ul><li>\u9047\u5230 yield \u6682\u505C\uFF0C\u5C06\u7D27\u8DDF yield \u8868\u8FBE\u5F0F\u7684\u503C\u4F5C\u4E3A\u8FD4\u56DE\u5BF9\u8C61\u7684 value</li><li>\u6CA1\u6709 yield \u4E00\u76F4\u6267\u884C\uFF0C\u5C06 return \u7684\u503C\u4F5C\u4E3A\u8FD4\u56DE\u5BF9\u8C61\u7684 value</li><li>\u6CA1\u6709 return \u8FD4\u56DE\u5BF9\u8C61\u7684 value \u4E3A undefined</li><li>next \u53EF\u4EE5\u643A\u5E26\u4E00\u4E2A\u53C2\u6570\uFF0C\u8BE5\u53C2\u6570\u4F1A\u88AB\u5F53\u4F5C<strong>\u4E0A\u4E00\u4E2A yield</strong>\u7684\u8FD4\u56DE\u503C</li></ul></li><li>return(param)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span>
  <span class="token keyword">yield</span> <span class="token number">2</span>
  <span class="token keyword">yield</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> iterator <span class="token operator">=</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// {value:1,done:false}</span>
iterator<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// {value:undefined,done:true}</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// {value:undefined,done:true}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>throw(param)</li></ul><h2 id="\u5173\u952E\u8BCD" tabindex="-1"><a class="header-anchor" href="#\u5173\u952E\u8BCD" aria-hidden="true">#</a> \u5173\u952E\u8BCD</h2><ul><li>yield \u4F5C\u4E3A\u8FD4\u56DE\u5BF9\u8C61\u7684 value</li><li>yield* \u751F\u6210\u5668\u51FD\u6570/\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u59D4\u6258\u7ED9\u5176\u4ED6\u53EF\u8FED\u4EE3\u65B9\u6CD5\uFF0C\u76F8\u5F53\u4E8E\u4EA4\u4ED8\u63A7\u5236\u6743\uFF08\u590D\u7528\u751F\u6210\u5668\uFF09</li></ul><h2 id="generator-\u4EE3\u7801\u6F14\u793A" tabindex="-1"><a class="header-anchor" href="#generator-\u4EE3\u7801\u6F14\u793A" aria-hidden="true">#</a> generator \u4EE3\u7801\u6F14\u793A</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> first <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">1</span>
  <span class="token keyword">let</span> second <span class="token operator">=</span> <span class="token keyword">yield</span> first <span class="token operator">+</span> <span class="token number">2</span>
  <span class="token keyword">yield</span> second <span class="token operator">+</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> iterator <span class="token operator">=</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// {value:1,done:false}</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// {value:6,done:false}</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// {value:8,done:false}</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// {value:undefined,done:true}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u534F\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B" aria-hidden="true">#</a> \u534F\u7A0B</h2><ul><li>\u4E00\u4E2A\u7EBF\u7A0B\u5B58\u5728\u591A\u4E2A\u534F\u7A0B\uFF0C\u4F46\u662F\u53EA\u80FD\u540C\u65F6\u6267\u884C\u4E00\u4E2A</li><li>generator \u662F\u534F\u7A0B\u5728 es6 \u7684\u5B9E\u73B0</li><li>yield \u6302\u8D77\u4E00\u4E2A\u534F\u7A0B\uFF0Cnext \u5524\u9192\u4E00\u4E2A\u534F\u7A0B</li></ul><h2 id="thunk-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#thunk-\u51FD\u6570" aria-hidden="true">#</a> thunk \u51FD\u6570</h2><p>\u4F20\u540D\u51FD\u6570\uFF0C\u66F4\u597D\u7684\u4F18\u96C5\u7684\u7F16\u5199 generator \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">Thunk</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> readFileThunk <span class="token operator">=</span> <span class="token function">Thunk</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> gen <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span>
    result<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">g</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> s1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFileThunk</span><span class="token punctuation">(</span><span class="token string">&#39;../let.md&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> s2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFileThunk</span><span class="token punctuation">(</span><span class="token string">&#39;../rest.md&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> s3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFileThunk</span><span class="token punctuation">(</span><span class="token string">&#39;../symbol.md&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">run</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,21);function e(t,o){return p}var l=n(a,[["render",e]]);export{l as default};
