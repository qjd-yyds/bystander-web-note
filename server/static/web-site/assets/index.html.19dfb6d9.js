import{_ as n,e as s}from"./app.1f7b43e3.js";const a={},p=s(`<h1 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> promise</h1><div class="custom-container tip"><p class="custom-container-title">\u95EE\u9898</p><p>\u5E38\u89C4\u7684\u5F02\u6B65\u89E3\u51B3\u65B9\u6848\u7F3A\u70B9</p><ul><li>\u5D4C\u5957\u5BB9\u6613\u4EA7\u751F\u56DE\u8C03\u5730\u72F1</li><li>\u63A7\u5236\u53CD\u8F6C\u9020\u6210\u7684\u4FE1\u4EFB\u95EE\u9898\uFF1A\u4E0D\u786E\u5B9A\u56DE\u8C03\u6709\u6CA1\u6709\u6B63\u786E\u6267\u884C</li></ul></div><ul><li>promise \u662F\u4E00\u4E2A\u5BF9\u8C61</li><li>\u5BF9\u8C61\u6709\u4E09\u4E2A\u72B6\u6001\uFF0C\u521D\u59CB\u72B6\u6001\u662F PENDING</li><li>\u5BF9\u8C61\u6709\u4E2A\u503C\uFF0C\u503C\u4EA7\u751F\u7684\u65F6\u673A\u4E0D\u5B9A\uFF0C\u53EF\u80FD\u662F\u672A\u6765\uFF0C\u53EF\u80FD\u662F\u73B0\u5728</li><li>\u72B6\u6001\u53D8\u5316\u7684\u65F6\u5019\uFF0C\u5C31\u662F\u503C\u786E\u5B9A\u7684\u65F6\u5019</li></ul><h2 id="promise-\u5982\u4F55\u5B9E\u73B0\u62C9\u5E73\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#promise-\u5982\u4F55\u5B9E\u73B0\u62C9\u5E73\u4EE3\u7801" aria-hidden="true">#</a> promise \u5982\u4F55\u5B9E\u73B0\u62C9\u5E73\u4EE3\u7801</h2><ul><li>promise \u7684 then \u91CC\u7684\u56DE\u8C03\u4F1A\u88AB\u653E\u5165 promise \u7684 fulfilledCbs \u6570\u7EC4\u548C rejectCbs \u6570\u7EC4\u91CC</li><li>\u5F53\u72B6\u6001\u53D1\u751F\u6539\u53D8\u540E\uFF0C\u4F1A\u6267\u884C\u961F\u5217\u91CC\u7684\u51FD\u6570</li></ul><h2 id="\u5982\u4F55\u53CD\u8F6C\u9020\u6210\u7684\u4FE1\u4EFB\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u53CD\u8F6C\u9020\u6210\u7684\u4FE1\u4EFB\u95EE\u9898" aria-hidden="true">#</a> \u5982\u4F55\u53CD\u8F6C\u9020\u6210\u7684\u4FE1\u4EFB\u95EE\u9898</h2><ul><li>promise \u7684\u72B6\u6001\u53EA\u80FD\u6539\u53D8\u4E00\u6B21</li></ul><h2 id="promisea-\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#promisea-\u89C4\u8303" aria-hidden="true">#</a> promiseA+ \u89C4\u8303</h2><ul><li>\u672F\u8BED promise \u4E00\u4E2A\u6709 then \u65B9\u6CD5\u7684\u5BF9\u8C61\u6216\u8005\u51FD\u6570\uFF0C\u884C\u4E3A\u7B26\u5408\u672C\u89C4\u8303</li><li>thenable \u5B9A\u4E49 then \u65B9\u6CD5\u7684\u5BF9\u8C61\u6216\u8005\u51FD\u6570</li><li>value \u4EFB\u4F55 js \u7684\u5408\u6CD5\u503C</li><li>exception throw \u8BED\u53E5\u629B\u51FA\u7684\u503C</li><li>reason promise \u88AB\u62D2\u7EDD\u539F\u56E0\u7684\u503C</li><li>\u72B6\u6001 <ul><li>pending</li><li>fulfulled</li><li>rejected</li></ul></li><li>then \u53C2\u6570 <ul><li>\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F onFulfulled\uFF0ConRejected</li><li>onFulfulled \u5728 promise \u5B8C\u6210\u540E\u88AB\u8C03\u7528\uFF0ConRejected \u5728 promise \u88AB\u62D2\u7EDD\u540E\u8C03\u7528</li><li>\u53EA\u80FD\u88AB\u8C03\u7528\u4E00\u6B21</li></ul></li><li>then \u65B9\u6CD5\u7684\u8C03\u7528\u53EF\u4EE5\u88AB\u591A\u6B21\u8C03\u7528</li><li>then \u65B9\u6CD5\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A promise <ul><li>\u4EE5 <code>const promise2 = promise1.then(onFulfilled,onRejected)</code>\u4E3A\u4F8B</li><li>onFulfilled \u4E0D\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4E14 promise1 \u7684\u72B6\u6001\u4E3A fulfilled\uFF0Cvalue \u503C\u540C promise1</li><li>onRejected \u4E0D\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4E14 promise1 \u7684\u72B6\u6001\u4E3A reason \u503C\u540C promise1</li><li>onFulfilled \u6216\u8005 onRejected \u8FD4\u56DE x\uFF0C\u8FDB\u5165\u89E3\u6790\u8FC7\u7A0B</li></ul></li><li>\u89E3\u6790\u8FC7\u7A0B</li></ul><ol><li>\u5982\u679C promise \u548C x \u6307\u5411\u76F8\u540C\u503C\uFF0C\u629B\u9519</li><li>\u5982\u679C x \u662F\u4E00\u4E2A promise</li><li>\u5982\u679C x \u662F\u4E00\u4E2A\u5BF9\u8C61\u6216\u8005\u51FD\u6570</li><li>\u5982\u679C x \u4E0D\u662F\u4E00\u4E2A\u5BF9\u8C61\u4E5F\u4E0D\u662F\u4E00\u4E2A\u51FD\u6570</li></ol><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>then \u548C catch \u8FD4\u56DE\u7684 promise \u4E0D\u662F\u539F\u6765\u7684 promise</p></div><table><thead><tr><th>\u65B9\u6CD5</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>Promise.resolve(value)</td><td>\u7B49\u540C\u4E8E new promise((resolve) =&gt; {resolve(value)})</td></tr><tr><td>Promise.reject(reason)</td><td>\u7B49\u540C\u4E8E new promise((resolve,reject) =&gt; {reject(reason)})</td></tr><tr><td>Promise.all([p1,p2])</td><td>\u6267\u884C\u6570\u7EC4\u5185\u7684\u65B9\u6CD5\uFF0C\u5168\u90E8\u662F fulfilled \u72B6\u6001\u624D\u662F fulfilled \u72B6\u6001</td></tr><tr><td>Promise.allSettled([p1,p2])</td><td>\u6267\u884C\u6570\u7EC4\u5185\u7684\u65B9\u6CD5\uFF0C\u6240\u6709 promise \u6539\u53D8\u72B6\u6001\u540E\u8FD4\u56DE</td></tr><tr><td>Promise.race([p1,p2])</td><td>\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u6539\u53D8\u72B6\u6001\u7684 promise</td></tr></tbody></table><h2 id="\u89E3\u51B3\u73B0\u5B9E\u4E2D\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u73B0\u5B9E\u4E2D\u7684\u4F8B\u5B50" aria-hidden="true">#</a> \u89E3\u51B3\u73B0\u5B9E\u4E2D\u7684\u4F8B\u5B50</h2><p>3 \u79D2\u4EE5\u540E\u4EAE\u4E00\u6B21\u7EA2\u706F\uFF0C\u518D\u8FC7 2 \u79D2\u4EAE\u4E00\u6B21\u7EFF\u706F\uFF0C\u518D\u8FC7 1 \u79D2\u4EAE\u4E00\u6B21\u9EC4\u706F\uFF0C\u7528 promise \u5B9E\u73B0\u591A\u6B21\u4EA4\u66FF\u4EAE\u706F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;\u7EA2&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">second</span><span class="token operator">:</span> <span class="token number">3000</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;\u7EFF&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">second</span><span class="token operator">:</span> <span class="token number">2000</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;\u9EC4&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">second</span><span class="token operator">:</span> <span class="token number">1000</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">light</span><span class="token punctuation">(</span><span class="token parameter">color<span class="token punctuation">,</span> second</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color <span class="token operator">+</span> <span class="token string">&#39;\u4EAE\u4E86&#39;</span><span class="token punctuation">)</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> second<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">orderLights</span><span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">light</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>color<span class="token punctuation">,</span> item<span class="token punctuation">.</span>second<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">orderLights</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">orderLights</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="\u5C0F\u8BD5\u725B\u5200" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u8BD5\u725B\u5200" aria-hidden="true">#</a> \u5C0F\u8BD5\u725B\u5200</h2><p>:::: code-group ::: code-group-item \u7B2C 1 \u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>::: ::: code-group-item \u7B2C 2 \u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>::: ::::</p><h2 id="promise-\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#promise-\u7684\u5B9E\u73B0" aria-hidden="true">#</a> promise \u7684\u5B9E\u73B0</h2><p>\u6D4B\u8BD5\u4F7F\u7528 promises-aplus-tests\uFF0C\u4E14\u901A\u8FC7\u6D4B\u8BD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1.\u4E86\u89E3promiseA+\u89C4\u8303</span>
<span class="token comment">// 2.\u6839\u636E\u89C4\u8303\u5B9E\u73B0</span>
<span class="token comment">// 3.\u6D4B\u8BD5</span>
<span class="token keyword">const</span> <span class="token constant">STATUS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">PENDING</span><span class="token operator">:</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">REJECTED</span><span class="token operator">:</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">FULFILLED</span><span class="token operator">:</span> <span class="token string">&#39;fulfilled&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6539\u53D8promise\u72B6\u6001\u4E3Afulfilled\u72B6\u6001</span>
<span class="token keyword">function</span> <span class="token function">fulfilledPromise</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53EA\u80FD\u4ECEpending\u72B6\u6001\u8F6C\u6362</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>promise<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6539\u53D8promise\u7684\u72B6\u6001</span>
  promise<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FULFILLED</span>
  <span class="token comment">// \u4FEE\u6539value\u503C</span>
  promise<span class="token punctuation">.</span>value <span class="token operator">=</span> value
  <span class="token comment">// \u6267\u884Cpromise\u56DE\u8C03\u51FD\u6570fulfilled\u961F\u5217</span>
  <span class="token function">runCbs</span><span class="token punctuation">(</span>promise<span class="token punctuation">.</span>fulfilledCbs<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6539\u53D8promise\u72B6\u6001\u4E3Areject\u72B6\u6001</span>
<span class="token keyword">function</span> <span class="token function">rejectedPromise</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53EA\u80FD\u4ECEpending\u72B6\u6001\u8F6C\u6362</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>promise<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  promise<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span>
  <span class="token comment">// \u4FEE\u6539reason</span>
  promise<span class="token punctuation">.</span>reason <span class="token operator">=</span> reason
  <span class="token comment">// \u6267\u884Cpromise\u56DE\u8C03\u51FD\u6570rejected\u961F\u5217</span>
  <span class="token function">runCbs</span><span class="token punctuation">(</span>promise<span class="token punctuation">.</span>rejectedCbs<span class="token punctuation">,</span> reason<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5224\u65AD\u662F\u4E0D\u662F\u4E00\u4E2Apromise</span>
<span class="token keyword">function</span> <span class="token function">isPromise</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> p <span class="token keyword">instanceof</span> <span class="token class-name">MyPromise</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u51B3\u8BAEx\u8FC7\u7A0B</span>
<span class="token keyword">function</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.promise\u548Cx\u6307\u5411\u76F8\u540C\u7684\u503C \u62A5\u9519</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>promise <span class="token operator">===</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;\u76F8\u540C\u7684\u503C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 2.x\u662F\u4E00\u4E2Apromise</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPromise</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E09\u79CD\u72B6\u6001</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fulfilledPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> x<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> x<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      x<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">fulfilledPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> x<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> x<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 3.x\u662F\u4E00\u4E2A\u5BF9\u8C61\u6216\u8005\u51FD\u6570</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> then
    <span class="token keyword">let</span> called <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// 1.\u5C06x.then\u8D4B\u503C\u7ED9then\uFF0C</span>
      then <span class="token operator">=</span> x<span class="token punctuation">.</span>then
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u8D4B\u503C\u51FA\u73B0\u62A5\u9519\uFF0C\u8FD9\u4E2A\u5F02\u5E38\u4F5C\u4E3Apromise\u7684\u62D2\u7EDD</span>
      <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>then<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4EE5x\u4E3Athis\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5,y\u4E3A\u53C2\u6570\u6267\u884CresolvePromise</span>
      <span class="token comment">// \u4EE5x\u4E3Athis\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5,r\u4E3A\u53C2\u6570\u6267\u884CrejectedPromise</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
          x<span class="token punctuation">,</span>
          <span class="token parameter">y</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53EA\u80FD\u88AB\u8C03\u7528\u4E00\u6B21</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> r<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span>
        called <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E0D\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4EE5x\u4E3A\u503C\u7684fulfilled</span>
      <span class="token function">fulfilledPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 4.x\u4E0D\u662F\u4E00\u4E2A\u5BF9\u8C61\u4E5F\u4E0D\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4EE5x\u4E3A\u503C\u7684fulfilled</span>
    <span class="token function">fulfilledPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5224\u65AD\u662F\u5426\u662F\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5224\u65AD\u662F\u4E0D\u662F\u4E00\u4E2A\u5BF9\u8C61</span>
<span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span>
    <span class="token string">&#39;[object object]&#39;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6267\u884C\u56DE\u8C03\u961F\u5217</span>
<span class="token keyword">function</span> <span class="token function">runCbs</span><span class="token punctuation">(</span><span class="token parameter">cbs<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cbs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">cb</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">MyPromise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>fulfilledCbs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// fulfilled\u7684\u56DE\u8C03\u51FD\u6570\u961F\u5217</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>rejectedCbs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// rejected\u7684\u56DE\u8C03\u51FD\u6570\u961F\u5217</span>
    <span class="token function">fn</span><span class="token punctuation">(</span>
      <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolvePromise</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">rejectedPromise</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> reason<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E24\u4E2A\u53C2\u6570 onfulfilled\u548Conrejected</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">onfulfilled<span class="token punctuation">,</span> onrejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u524D\u7684promise</span>
    <span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token comment">// \u9700\u8981\u8FD4\u56DE\u7684promise</span>
    <span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 1.promise1 \u662Ffulfilled\u72B6\u6001</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>promise1<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// onfulfilled\u53C2\u6570\u4E0D\u662F\u4E00\u4E2A\u51FD\u6570,\u5FFD\u7565</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isFunction</span><span class="token punctuation">(</span>onfulfilled<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> promise1
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6A21\u62DF\u5F02\u6B65\u4EFB\u52A1</span>
      <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u53C2\u6570\u662F\u4E0A\u4E00\u4E2Apromise\u7684value</span>
          <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onfulfilled</span><span class="token punctuation">(</span>promise1<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
          <span class="token comment">// \u51B3\u8BAE\u8FD9\u4E2Apromise2,\u901A\u8FC7x\u51B3\u5B9Apromise\u8FD4\u56DE\u7684\u503C</span>
          <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2.promise1 \u662Frejected\u72B6\u6001</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>promise1<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// rejected\u53C2\u6570\u4E0D\u662F\u4E00\u4E2A\u51FD\u6570,\u5FFD\u7565</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isFunction</span><span class="token punctuation">(</span>onrejected<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> promise1
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6A21\u62DF\u5F02\u6B65\u4EFB\u52A1</span>
      <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u53C2\u6570\u662F\u4E0A\u4E00\u4E2Apromise\u7684value</span>
          <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onrejected</span><span class="token punctuation">(</span>promise1<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
          <span class="token comment">// \u51B3\u8BAE\u8FD9\u4E2Apromise2,\u901A\u8FC7x\u51B3\u5B9Apromise\u8FD4\u56DE\u7684\u503C</span>
          <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 3.promise1\u662Fpending\u72B6\u6001</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>promise1<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u4E0D\u662F\u51FD\u6570\uFF0C\u5C06\u4E0A\u4E00\u4E2Apromise\u7684\u503C\u900F\u4F20\u7ED9\u4E0B\u4E00\u4E2A</span>
      onfulfilled <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>onfulfilled<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function-variable function">onfulfilled</span> <span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value
      onrejected <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>onrejected<span class="token punctuation">)</span>
        <span class="token operator">?</span> <span class="token function-variable function">onrejected</span>
        <span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> err
          <span class="token punctuation">}</span>
      <span class="token comment">// \u628Athen\u7684\u56DE\u8C03\u4F20\u5165\u56DE\u8C03\u961F\u5217\u91CC</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>fulfilledCbs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        <span class="token comment">// \u6BCF\u4E2A\u56DE\u8C03\u90FD\u662F\u5F02\u6B65\u7684</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onfulfilled</span><span class="token punctuation">(</span>promise1<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>rejectedCbs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onrejected</span><span class="token punctuation">(</span>promise1<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">rejectedPromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> error<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> promise2
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//  \u6D4B\u8BD5\u7528\u4F8B\u7528\u5230\u7684\u94A9\u5B50   promises-aplus-tests</span>
MyPromise<span class="token punctuation">.</span><span class="token function-variable function">deferred</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> deferred <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  deferred<span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    deferred<span class="token punctuation">.</span>resolve <span class="token operator">=</span> resolve
    deferred<span class="token punctuation">.</span>reject <span class="token operator">=</span> reject
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> deferred
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> MyPromise
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br></div></div>`,25);function t(e,o){return p}var l=n(a,[["render",t]]);export{l as default};
