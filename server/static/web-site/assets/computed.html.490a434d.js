import{_ as n,e as s}from"./app.1f7b43e3.js";const a={},p=s(`<h2 id="computed-\u8BA1\u7B97\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#computed-\u8BA1\u7B97\u5C5E\u6027" aria-hidden="true">#</a> computed \u8BA1\u7B97\u5C5E\u6027</h2><ul><li>\u63A5\u53D7\u4E00\u4E2A getter \u51FD\u6570\uFF0C\u5E76\u6839\u636E getter \u7684\u8FD4\u56DE\u503C\u8FD4\u56DE\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u54CD\u5E94\u5F0F ref \u5BF9\u8C61\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> plusOne <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>plusOne<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 2</span>

plusOne<span class="token punctuation">.</span>value<span class="token operator">++</span> <span class="token comment">// \u9519\u8BEF</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>\u6216\u8005\uFF0C\u63A5\u53D7\u4E00\u4E2A\u5177\u6709 get \u548C set \u51FD\u6570\u7684\u5BF9\u8C61\uFF0C\u7528\u6765\u521B\u5EFA\u53EF\u5199\u7684 ref \u5BF9\u8C61\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> plusOne <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">.</span>value <span class="token operator">=</span> val <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

plusOne<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="lazy-\u61D2\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#lazy-\u61D2\u6267\u884C" aria-hidden="true">#</a> lazy \u61D2\u6267\u884C</h2><p><code>effect</code>\u51FD\u6570\u4F1A\u7ACB\u5373\u6267\u884C\u5176\u4F20\u5165\u7684\u51FD\u6570\uFF0C\u5982\u679C\u4E0D\u5E0C\u671B\u4ED6\u7ACB\u5373\u6267\u884C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>lazy</code>\u6765\u8FBE\u5230\u76EE\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">effect</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6709 lazy\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u5B9E\u73B0 effect \u7684\u903B\u8F91\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u589E\u52A0\u4E00\u4E2A\u7684\u5168\u5C40\u53D8\u91CF\u6765\u5B58\u50A8\u5F53\u524D\u6267\u884C\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
<span class="token keyword">let</span> activeEffect
<span class="token comment">// \u65B0\u589E\u4E00\u4E2A\u6808</span>
<span class="token keyword">const</span> effectStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// \u518D\u8C03\u7528effect\u7684\u65F6\u5019\uFF0C\u6CE8\u518C\u526F\u4F5C\u7528\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">effectFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728\u8FD9\u4E4B\u524D\u6E05\u7A7Adeps\u961F\u5217</span>
    <span class="token function">cleanup</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    activeEffect <span class="token operator">=</span> effectFn
    <span class="token comment">// \u5728fn\u6267\u884C\u4E4B\u524D\u538B\u6808</span>
    effectStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6267\u884C\u5B8C\u6210\u4EE5\u540E\u51FA\u6808,\u5E76\u628AactiveEffect\u8FD8\u539F</span>
    activeEffect <span class="token operator">=</span> effectStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  effectFn<span class="token punctuation">.</span>options <span class="token operator">=</span> options <span class="token comment">// \u65B0\u589E\u4E00\u4E2A\u9009\u9879</span>
  <span class="token comment">// \u7528\u6765\u5B58\u50A8\u6240\u6709\u4E0E\u8BE5\u526F\u4F5C\u7528\u7684\u4F9D\u8D56\u96C6\u5408</span>
  effectFn<span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u53EA\u6709lazy\u7684\u65F6\u5019\u624D\u6267\u884C\u526F\u4F5C\u7528</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> effectFn <span class="token comment">// \u5C06\u526F\u4F5C\u7528\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C\u8FD4\u56DE</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u73B0\u5728\u6211\u4EEC\u5B9E\u73B0\u4E86 lazy \u7684\u61D2\u6267\u884C\uFF0C\u56E0\u4E3A\u8FD4\u56DE\u4E86\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u5F53\u6211\u4EEC\u9700\u8981\u6267\u884C\u7684\u65F6\u5019\uFF0C\u53EA\u9700\u8981\u624B\u52A8\u6267\u884C\u3002\u5982\u679C\u53EA\u662F\u624B\u52A8\u6267\u884C\u90A3\u4E48\u610F\u4E49\u4E0D\u5927\uFF0C\u6211\u4EEC\u9700\u8981\u83B7\u5F97\u6267\u884C\u540E\u7684\u8FD4\u56DE\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u589E\u52A0\u4E00\u4E2A\u7684\u5168\u5C40\u53D8\u91CF\u6765\u5B58\u50A8\u5F53\u524D\u6267\u884C\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
<span class="token keyword">let</span> activeEffect
<span class="token comment">// \u65B0\u589E\u4E00\u4E2A\u6808</span>
<span class="token keyword">const</span> effectStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// \u518D\u8C03\u7528effect\u7684\u65F6\u5019\uFF0C\u6CE8\u518C\u526F\u4F5C\u7528\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">effectFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728\u8FD9\u4E4B\u524D\u6E05\u7A7Adeps\u961F\u5217</span>
    <span class="token function">cleanup</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    activeEffect <span class="token operator">=</span> effectFn
    <span class="token comment">// \u5728fn\u6267\u884C\u4E4B\u524D\u538B\u6808</span>
    effectStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token comment">// \u4FDD\u5B58\u6267\u884C\u7684fn\u8FD4\u56DE\u503C</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6267\u884C\u5B8C\u6210\u4EE5\u540E\u51FA\u6808,\u5E76\u628AactiveEffect\u8FD8\u539F</span>
    activeEffect <span class="token operator">=</span> effectStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res <span class="token comment">// \u8FD4\u56DE\u6267\u884C\u7ED3\u679C</span>
  <span class="token punctuation">}</span>
  effectFn<span class="token punctuation">.</span>options <span class="token operator">=</span> options <span class="token comment">// \u65B0\u589E\u4E00\u4E2A\u9009\u9879</span>
  <span class="token comment">// \u7528\u6765\u5B58\u50A8\u6240\u6709\u4E0E\u8BE5\u526F\u4F5C\u7528\u7684\u4F9D\u8D56\u96C6\u5408</span>
  effectFn<span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u53EA\u6709lazy\u7684\u65F6\u5019\u624D\u6267\u884C\u526F\u4F5C\u7528</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> effectFn <span class="token comment">// \u5C06\u526F\u4F5C\u7528\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C\u8FD4\u56DE</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u73B0\u5728\u6211\u4EEC\u5DF2\u7ECF\u80FD\u591F\u5B9E\u73B0\u61D2\u52A0\u8F7D\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u5E76\u4E14\u5F97\u5230\u8FD4\u56DE\u503C</p><h2 id="\u5B9E\u73B0\u8BA1\u7B97\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u8BA1\u7B97\u5C5E\u6027" aria-hidden="true">#</a> \u5B9E\u73B0\u8BA1\u7B97\u5C5E\u6027</h2><p>\u5728\u4E0A\u4E00\u6B65\u6211\u4EEC\u5DF2\u7ECF\u5B9E\u73B0\u61D2\u52A0\u8F7D\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u5E76\u4E14\u5F97\u5230\u8FD4\u56DE\u503C\u3002\u63A5\u4E0B\u6765\u5C31\u662F\u5B9E\u73B0\u8BA1\u7B97\u5C5E\u6027\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token parameter">getter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> effectfn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">effectfn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> sumres <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> obj<span class="token punctuation">.</span>foo <span class="token operator">+</span> obj<span class="token punctuation">.</span>bar<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sumres<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u73B0\u5728\u6211\u4EEC\u5B9E\u73B0\u4E86 computed \u51FD\u6570\uFF0C\u4F46\u662F\u65E0\u6CD5\u505A\u5230\u7F13\u5B58\uFF0C\u5F53\u6211\u4EEC\u6BCF\u6B21\u8BBF\u95EE sumres\uFF0C\u4F1A\u9020\u6210\u591A\u6B21\u8C03\u7528 effectfn</p><h2 id="\u589E\u52A0\u7F13\u5B58" tabindex="-1"><a class="header-anchor" href="#\u589E\u52A0\u7F13\u5B58" aria-hidden="true">#</a> \u589E\u52A0\u7F13\u5B58</h2><p>\u5F53\u6211\u4EEC\u591A\u6B21\u8BBF\u95EE sumres\uFF0C\u4F1A\u9020\u6210\u591A\u6B21\u8C03\u7528 effect\uFF0C\u5373\u4F7F\u6570\u636E\u6CA1\u6709\u53D8\u5316\u3002\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u6211\u4EEC\u9700\u8981\u7F13\u5B58\u4E0A\u4E00\u6B21\u7684\u503C</p><p>\u589E\u52A0 scheduler\uFF0C\u5F53\u6570\u636E\u53D8\u5316\u7684\u65F6\u5019\u5C06 dirty \u53D8\u4E3A true\uFF0C\u5F53\u83B7\u53D6\u7684\u65F6\u5019\u91CD\u65B0\u8BA1\u7B97</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token parameter">getter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> value <span class="token comment">// \u7F13\u5B58\u4E0A\u4E00\u6B21\u7684\u503C</span>
  <span class="token keyword">let</span> dirty <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u4E00\u4E2A\u72B6\u6001\uFF0C\u5982\u679C\u662Ftrue\uFF0C\u610F\u5473\u7740\u662F\u810F\u7684\uFF0C\u9700\u8981\u8FDB\u884C\u91CD\u65B0\u8BA1\u7B97</span>
  <span class="token keyword">const</span> effectfn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// \u589E\u52A0\u4E00\u4E2A\u8C03\u5EA6\u5668\uFF0C\u5F53\u6570\u636E\u53D8\u5316\u7684\u65F6\u5019\uFF0C\u5C06dirty\u53D8\u6210true</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dirty <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53EA\u6709\u810F\u7684\u65F6\u5019\u624D\u8981\u5904\u7406</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FDD\u5B58\u503C</span>
        value <span class="token operator">=</span> <span class="token function">effectfn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5C06dirty\u8BBE\u7F6E\u6210false</span>
        dirty <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="effect-\u4E2D\u5F15\u7528-computed" tabindex="-1"><a class="header-anchor" href="#effect-\u4E2D\u5F15\u7528-computed" aria-hidden="true">#</a> effect \u4E2D\u5F15\u7528 computed</h2><p>\u867D\u7136\u6211\u4EEC\u4E0A\u9762\u7684\u5B9E\u73B0\u8FD1\u4E4E\u5B8C\u7F8E\uFF0C\u4F46\u662F\u5F53\u53E6\u5916\u4E00\u4E2A effect \u4E5F\u5F15\u7528\u4E86\u8FD9\u4E2A\u8BA1\u7B97\u6570\u636E\uFF0C\u5F53\u4FEE\u6539\u5173\u8054\u5BF9\u8C61\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u671F\u671B\u8BA1\u7B97\u6570\u636E\u89E6\u53D1\u66F4\u65B0\uFF0C\u4F46\u662F\u6CA1\u6709\u53D1\u751F\u53D8\u5316\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u5728 effect \u4E2D\u5F15\u7528 computed\uFF0C\u672C\u8D28\u4E0A\u8FD8\u662F effect \u5D4C\u5957 effect\u3002\u4E00\u4E2A computed \u62E5\u6709\u81EA\u5DF1\u7684 effect\uFF0C\u5E76\u4E14\u662F\u61D2\u52A0\u8F7D\u3002\u53EA\u6709\u8BFB\u53D6\u7684\u65F6\u5019\u624D\u4F1A\u6267\u884C\u3002</p></div><p>\u4E3A\u4E86\u8BA1\u7B97\u5C5E\u6027\u6CA1\u6709\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u53EA\u9700\u8981\u624B\u52A8\u53BB\u8FFD\u8E2A\u4F9D\u8D56\uFF0C\u5E76\u4E14\u624B\u52A8\u89E6\u53D1\u5C31\u53EF\u4EE5\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token parameter">getter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> value <span class="token comment">// \u7F13\u5B58\u4E0A\u4E00\u6B21\u7684\u503C</span>
  <span class="token keyword">let</span> dirty <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u4E00\u4E2A\u72B6\u6001\uFF0C\u5982\u679C\u662Ftrue\uFF0C\u610F\u5473\u7740\u662F\u810F\u7684\uFF0C\u9700\u8981\u8FDB\u884C\u91CD\u65B0\u8BA1\u7B97</span>
  <span class="token keyword">const</span> effectfn <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// \u589E\u52A0\u4E00\u4E2A\u8C03\u5EA6\u5668\uFF0C\u5F53\u6570\u636E\u53D8\u5316\u7684\u65F6\u5019\uFF0C\u5C06dirty\u53D8\u6210true</span>
    <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dirty <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token comment">// \u5F53\u6570\u636E\u53D1\u751F\u53D8\u5316\u624B\u52A8\u8C03\u7528</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53EA\u6709\u810F\u7684\u65F6\u5019\u624D\u8981\u5904\u7406</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FDD\u5B58\u503C</span>
        value <span class="token operator">=</span> <span class="token function">effectfn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5C06dirty\u8BBE\u7F6E\u6210false</span>
        dirty <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5F53\u83B7\u53D6value\u7684\u65F6\u5019\u624B\u52A8\u8C03\u7528track\u89E6\u53D1\u8FFD\u8E2A</span>
      <span class="token function">track</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,26);function e(t,c){return p}var l=n(a,[["render",e]]);export{l as default};
