import{_ as n,c as s}from"./app.56e16294.js";var a="/web-site/assets/BST.80890a76.png",p="/web-site/assets/BST-quexian.9f702c4c.png";const e={},t=s('<h1 id="\u4E8C\u53C9\u6811-binarytree" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811-binarytree" aria-hidden="true">#</a> \u4E8C\u53C9\u6811(BinaryTree)</h1><h2 id="\u4E8C\u53C9\u6811\u7684\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u6982\u5FF5" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u6982\u5FF5</h2><p>\u4EFB\u4F55\u4E00\u68F5\u6811\u90FD\u53EF\u4EE5\u7528\u4E8C\u53C9\u6811\u6A21\u62DF</p><ul><li>\u4E8C\u53C9\u6811\u53EF\u4EE5\u4E3A\u7A7A\uFF0C\u4E5F\u5C31\u662F\u6CA1\u6709\u8282\u70B9</li><li>\u82E5\u4E0D\u4E3A\u7A7A\uFF0C\u4ED6\u662F\u7531\u6839\u8282\u70B9\u548C\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u4E24\u4E2A\u4E0D\u76F8\u4EA4\u7684\u4E8C\u53C9\u6811\u6784\u6210</li></ul><h2 id="\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027" aria-hidden="true">#</a> \u7279\u6027</h2><ul><li>\u4E00\u4E2A\u4E8C\u53C9\u6811\u7B2C i \u5C42\u6700\u5927\u7684\u8282\u70B9\u6570\u4E3A\uFF1A2^(i-1) i&gt;=1</li><li>\u6DF1\u5EA6\u4E3A k \u7684\u4E8C\u53C9\u6811\u6709\u6700\u5927\u7684\u8282\u70B9\u603B\u6570\u4E3A\uFF1A2^k - 1,k&gt;=1</li><li>\u5BF9\u4E8E\u4EFB\u4F55\u975E\u7A7A\u4E8C\u53C9\u6811\uFF0C\u82E5 n0 \u8868\u793A\u53F6\u8282\u70B9\u7684\u4E2A\u6570\uFF0Cn2 \u662F<strong>\u5EA6\u4E3A 2</strong> \u7684\u975E\u8282\u70B9\u4E2A\u6570\uFF0C\u90A3\u4E48\u4E24\u8005\u6EE1\u8DB3 n0 = n2 + 1</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>\u6EE1\u4E8C\u53C9\u6811(\u5B8C\u7F8E\u4E8C\u53C9\u6811)\uFF0C\u9664\u4E86\u6700\u4E0B\u9762\u7684\u53F6\u8282\u70B9\u5916\uFF0C\u6BCF\u5C42\u7684\u8282\u70B9\u90FD\u6709\u4E24\u4E2A\u5B50\u8282\u70B9</li><li>\u5B8C\u5168\u4E8C\u53C9\u6811:\u9664\u4E86\u6700\u540E\u4E00\u5C42\uFF0C\u5176\u4ED6\u5404\u5C42\u7684\u8282\u70B9\u8FBE\u5230\u6700\u5927\u4E2A\u6570\uFF0C\u4ECE\u6700\u540E\u4E00\u5C42\u4ECE\u5DE6\u5411\u53F3\uFF0C\u53EA\u7F3A<strong>\u53F3\u4FA7\u8282\u70B9</strong></li></ul></div><h2 id="\u4E8C\u53C9\u6811\u7684\u5B58\u50A8\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u5B58\u50A8\u65B9\u5F0F" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u5B58\u50A8\u65B9\u5F0F</h2><ul><li>\u6570\u7EC4 \u5B8C\u5168\u4E8C\u53C9\u6811\u8868\u793A\u53EF\u4EE5\uFF0C\u5F53\u975E\u5B8C\u5168\u4E8C\u53C9\u6811\u7684\u65F6\u5019\u4F1A\u9020\u6210\u5185\u5B58\u6D6A\u8D39</li><li>\u94FE\u8868 \u4E0D\u4F1A\u9020\u6210\u5185\u5B58\u6D6A\u8D39</li></ul><h2 id="\u4E8C\u53C9\u641C\u7D22\u6811-binary-search-tree-bst" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u641C\u7D22\u6811-binary-search-tree-bst" aria-hidden="true">#</a> \u4E8C\u53C9\u641C\u7D22\u6811(Binary Search Tree,BST)</h2><p>\u4E8C\u53C9\u6392\u5E8F\u6811\u6216\u8005\u4E8C\u53C9\u67E5\u627E\u6811</p><p><img src="'+a+`" alt="\u4E8C\u53C9\u641C\u7D22\u6811"></p><ul><li>\u53EF\u4EE5\u662F\u4E00\u4E2A\u7A7A\u6811</li><li>\u5982\u679C\u4E0D\u4E3A\u7A7A <ul><li>\u975E\u7A7A\u5DE6\u5B50\u6811\u5C0F\u4E8E\u6839\u8282\u70B9\u7684\u952E\u503C</li><li>\u975E\u7A7A\u53F3\u5B50\u6811\u5927\u4E8E\u6839\u8282\u70B9\u7684\u952E\u503C</li><li>\u5DE6\u53F3\u5B50\u6811\u672C\u8EAB\u4E5F\u662F\u4E8C\u53C9\u6811</li></ul></li></ul><h2 id="\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E3B\u8981\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E3B\u8981\u65B9\u6CD5" aria-hidden="true">#</a> \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u4E3B\u8981\u65B9\u6CD5</h2><ul><li>insert(key) \u63D2\u5165\u65B0\u7684\u952E</li><li>serach(key) \u67E5\u627E\u6307\u5B9A\u952E\uFF0C\u6CA1\u627E\u5230\u8FD4\u56DE false \u627E\u5230\u8FD4\u56DE true</li><li>inOrderTraverse \u901A\u8FC7\u4E2D\u5E8F\u904D\u5386\u6240\u6709\u8282\u70B9</li><li>preOrderTraverse \u5148\u5E8F <blockquote><ol><li>\u8BBF\u95EE\u6839\u8282\u70B9</li><li>\u5148\u904D\u5386\u5DE6\u5B50\u6811</li><li>\u5148\u904D\u5386\u53F3\u5B50\u6811</li></ol></blockquote></li><li>postOrderTraverse \u540E\u5E8F</li><li>\u5C42\u5E8F\u904D\u5386</li><li>min \u8FD4\u56DE\u6700\u5C0F\u7684\u503C/\u952E</li><li>max \u8FD4\u56DE\u6700\u5927\u503C/\u952E</li><li>remove \u79FB\u9664\u67D0\u4E2A\u952E <blockquote><p>\u5220\u9664\u8282\u70B9\u590D\u6742 \u5F88\u5927\u7684\u5185\u5B58\u6D6A\u8D39</p></blockquote></li></ul><h2 id="\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u5C01\u88C5-binarysearchtree" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u641C\u7D22\u6811\u7684\u5C01\u88C5-binarysearchtree" aria-hidden="true">#</a> \u4E8C\u53C9\u641C\u7D22\u6811\u7684\u5C01\u88C5(BinarySearchTree)</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B50\u8282\u70B9</span>
<span class="token keyword">function</span> <span class="token function">Node</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key
  <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5C01\u88C5\u4E8C\u53C9\u641C\u7D22\u6811</span>
<span class="token keyword">function</span> <span class="token function">BinarySearchTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token comment">// - serach(key) \u67E5\u627E\u6307\u5B9A\u952E\uFF0C\u6CA1\u627E\u5230\u8FD4\u56DE false \u627E\u5230\u8FD4\u56DE true</span>
  <span class="token comment">// - inOrderTraverse \u901A\u8FC7\u4E2D\u5E8F\u904D\u5386\u6240\u6709\u8282\u70B9</span>
  <span class="token comment">// - preOrderTraverse \u5148\u5E8F</span>
  <span class="token comment">// - postOrderTraverse \u540E\u5E8F</span>
  <span class="token comment">// - min \u8FD4\u56DE\u6700\u5C0F\u7684\u503C/\u952E</span>
  <span class="token comment">// - max \u8FD4\u56DE\u6700\u5927\u503C/\u952E</span>
  <span class="token comment">// - remove \u79FB\u9664\u67D0\u4E2A\u952E</span>
<span class="token punctuation">}</span>
<span class="token comment">// - insert(key) \u63D2\u5165\u65B0\u7684\u952E \u5BF9\u5916\u66B4\u9732\u65B9\u6CD5</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">insert</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u521B\u5EFA\u5B50\u8282\u70B9</span>
  <span class="token keyword">var</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token comment">// 2.\u5224\u65AD\u6839\u8282\u70B9\u662F\u5426\u6709\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> node
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6267\u884C\u63D2\u5165</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> node<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u63D2\u5165node,</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">insertNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> newNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newNode<span class="token punctuation">.</span>key <span class="token operator">&lt;</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5DE6\u67E5\u627E\uFF0C\u5982\u679C\u5DE6\u8FB9\u6CA1\u6709\uFF0C\u5C31\u8D4B\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>left <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9012\u5F52\u63D2\u5165\uFF0C\u5982\u679C\u5DE6\u8FB9\u6709\u503C\uFF0C\u7EE7\u7EED\u67E5\u627E\u5DE6\u8FB9\u7684\u5B50\u8282\u70B9</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53F3\u67E5\u627E</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>right <span class="token operator">=</span> newNode
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9012\u5F52\u63D2\u5165</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> newNode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5148\u5E8F\u904D\u5386\uFF0C\u5148\u5904\u7406\uFF0C\u5C31\u53EB\u5148\u5E8F</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">preOrderTraversal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraversalNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7B2C\u4E00\u6B21node=&gt;11</span>
<span class="token comment">// \u7B2C\u4E8C\u6B21node =&gt;7</span>
<span class="token comment">// \u7B2C\u4E09\u6B21node =&gt;5</span>
<span class="token comment">// \u7B2C\u56DB\u6B21node =&gt;3</span>
<span class="token comment">// \u7B2C\u56DB\u6B21node =&gt;null</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">preOrderTraversalNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9012\u5F52\u5904\u7406\u5B50\u6811</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5904\u7406\u7ECF\u8FC7\u7684\u8282\u70B9</span>
    <span class="token function">handler</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
    <span class="token comment">// \u904D\u5386\u6240\u6709\u5DE6\u5B50\u6811</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraversalNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
    <span class="token comment">// \u904D\u5386\u6240\u6709\u53F3\u5B50\u6811</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraversalNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E2D\u5E8F\u904D\u5386</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">midOrderTraversal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">midOrderTraversalNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">midOrderTraversalNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5148\u904D\u5386\u5DE6\u5B50\u6811</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">midOrderTraversalNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
    <span class="token comment">// \u5904\u7406\u7ECF\u8FC7\u7684\u6811</span>
    <span class="token function">handler</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
    <span class="token comment">// \u5148\u904D\u5386\u53F3\u5B50\u6811</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">midOrderTraversalNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u540E\u5E8F\u904D\u5386</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">postOrderTraversal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postOrderTraversalNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">postOrderTraversalNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//  5</span>
  <span class="token comment">// 3 6</span>
  <span class="token comment">// \u4E3A\u4F8B</span>
  <span class="token comment">// \u67E5\u8BE2\u5230\u6700\u5DE6\u4FA73</span>
  <span class="token comment">// 3 \u7684\u5DE6\u4FA7 \u4E3Anull \u8DF3\u51FA</span>
  <span class="token comment">// 3\u7684\u53F3\u4FA7\u4E3Anull \u8DF3\u51FA</span>
  <span class="token comment">// \u6253\u53703</span>
  <span class="token comment">// 3\u662F5\u7684\u5DE6\u5B50\u6811</span>
  <span class="token comment">// \u51FA\u6808 \u8FDB\u51655\u7684\u6267\u884C\u6808</span>
  <span class="token comment">// 5\u7684\u53F3\u5B50\u6811</span>
  <span class="token comment">// \u8FDB\u51656\u7684\u6267\u884C\u6808</span>
  <span class="token comment">// 6\u7684\u5DE6\u4FA7null</span>
  <span class="token comment">// 6\u7684\u53F3\u4FA7null</span>
  <span class="token comment">// \u6253\u53706</span>
  <span class="token comment">// \u51FA\u6808,\u8FDB\u51655\u7684\u6267\u884C\u6808</span>
  <span class="token comment">// \u8FD9\u4E2A\u65F6\u50195\u7684\u5DE6\u53F3\u5B50\u6811\u904D\u5386\u5B8C\u6210</span>
  <span class="token comment">// \u6253\u53705,\u51FA\u6808,\u8FDB\u5165\u4E0A\u4E00\u7EA7</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5148\u904D\u5386\u5DE6\u5B50\u6811</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postOrderTraversalNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
    <span class="token comment">// \u518D\u904D\u5386\u53F3\u5B50\u6811</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postOrderTraversalNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
    <span class="token comment">// \u518D\u5904\u7406\u8282\u70B9</span>
    <span class="token function">handler</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6700\u5C0F\u503C</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">min</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u601D\u8DEF\u662F\u67E5\u8BE2\u6700\u540E\u7684\u5DE6\u5B50\u6811</span>
  <span class="token keyword">var</span> node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
  <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    key <span class="token operator">=</span> node<span class="token punctuation">.</span>key
    node <span class="token operator">=</span> node<span class="token punctuation">.</span>left
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> key
<span class="token punctuation">}</span>
<span class="token comment">// \u6700\u5927\u503C</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">max</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u4F9D\u6B21\u5411\u53F3\u4E0D\u65AD\u67E5\u627E</span>
  <span class="token keyword">var</span> node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
  <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    key <span class="token operator">=</span> node<span class="token punctuation">.</span>key
    node <span class="token operator">=</span> node<span class="token punctuation">.</span>right
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> key
<span class="token punctuation">}</span>
<span class="token comment">// \u641C\u7D22\u7279\u5B9A\u7684\u503C</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u83B7\u53D6\u6839\u8282\u70B9</span>
  <span class="token keyword">var</span> node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
  <span class="token comment">// 2.\u5FAA\u73AF\u641C\u7D22key</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>key <span class="token operator">&gt;</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node <span class="token operator">=</span> node<span class="token punctuation">.</span>left
      <span class="token comment">// \u904D\u5386\u5DE6\u5B50\u6811</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>key <span class="token operator">&lt;</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node <span class="token operator">=</span> node<span class="token punctuation">.</span>right
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5220\u9664\u64CD\u4F5C</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">remove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1\u5148\u627E\u5230\u9700\u8981\u5220\u9664\u7684\u8282\u70B9\uFF0C\u6CA1\u6709\u627E\u5230\u5C31\u4E0D\u5220\u9664</span>
  <span class="token comment">// 1.1\u5B9A\u4E49\u53D8\u91CF</span>
  <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root
  <span class="token keyword">var</span> parent <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">var</span> isLeftChild <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u662F\u5426\u662F\u5DE6\u8282\u70B9</span>
  <span class="token comment">// 1.2\u67E5\u627E</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>key <span class="token operator">!=</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    parent <span class="token operator">=</span> current
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">&lt;</span> current<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5411\u5DE6\u79FB\u52A8</span>
      isLeftChild <span class="token operator">=</span> <span class="token boolean">true</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>left
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5411\u53F3\u79FB\u52A8</span>
      isLeftChild <span class="token operator">=</span> <span class="token boolean">false</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>right
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5230\u6700\u540E\u7684\u8282\u70B9\uFF0C\u4F9D\u7136\u6CA1\u6709\u627E\u5230key\uFF0C\u7ED3\u675F\u5FAA\u73AF\u8FD4\u56DEfalse</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 1.3\u627E\u5230\u4E86\u9700\u8981\u5220\u9664\u7684\u8282\u70B9</span>
  <span class="token comment">// 2.\u6839\u636E\u5BF9\u5E94\u60C5\u51B5\u5220\u9664\u8282\u70B9</span>
  <span class="token comment">// 2.1.\u5220\u9664\u7684\u8282\u70B9\u662F\u53F6\u8282\u70B9\uFF0C\u53F6\u5B50\u8282\u70B9\u7684\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u90FD\u4E3A\u7A7A\uFF08\u6CA1\u6709\u5B50\u8282\u70B9\uFF09</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u524D\u8282\u70B9\u662F\u6839\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isLeftChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u524D\u5220\u9664\u7684\u662F\u5DE6\u53F6\u8282\u70B9\uFF0C\u7236\u7EA7\u7684\u5DE6\u5B50\u6811\u53D8\u4E3Anull</span>
      parent<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      parent<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u524D\u8282\u70B9\u662F\u6839\u8282\u70B9\uFF0C\u628A\u5DE6\u8282\u70B9\u94FE\u63A5\u5230\u6839\u8282\u70B9</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> current<span class="token punctuation">.</span>left
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isLeftChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 2.2.\u5220\u9664\u7684\u8282\u70B9\u53EA\u6709\u4E00\u4E2A\u5DE6\u5B50\u6811\uFF08\u4E00\u4E2A\u5B50\u8282\u70B9\uFF09</span>
      <span class="token comment">// \u5F53\u524D\u7236\u8282\u70B9\u5DE6\u5B50\u6811\u94FE\u63A5\u5F53\u524D\u8282\u70B9\u7684\u5DE6\u5B50\u6811\uFF0C\u5E76\u4E14\u5F53\u524D\u5220\u9664\u7684\u8282\u70B9\u6709\u6CA1\u53F3\u5B50\u6811</span>
      parent<span class="token punctuation">.</span>left <span class="token operator">=</span> current<span class="token punctuation">.</span>left
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u524D\u7236\u8282\u70B9\u53F3\u5B50\u6811\u94FE\u63A5\u5F53\u524D\u8282\u70B9\u7684\u5DE6\u5B50\u6811\uFF0C\u5E76\u4E14\u5F53\u524D\u5220\u9664\u7684\u8282\u70B9\u6709\u6CA1\u53F3\u5B50\u6811</span>
      parent<span class="token punctuation">.</span>right <span class="token operator">=</span> current<span class="token punctuation">.</span>left
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 2.2.\u5220\u9664\u7684\u8282\u70B9\u53EA\u6709\u4E00\u4E2A\u53F3\u5B50\u6811\uFF08\u4E00\u4E2A\u5B50\u8282\u70B9\uFF09</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u524D\u8282\u70B9\u662F\u6839\u8282\u70B9</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> current<span class="token punctuation">.</span>right
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isLeftChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u524D\u7236\u8282\u70B9\u5DE6\u5B50\u6811\u94FE\u63A5\u5F53\u524D\u8282\u70B9\u7684\u53F3\u5B50\u6811</span>
      parent<span class="token punctuation">.</span>left <span class="token operator">=</span> current<span class="token punctuation">.</span>right
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u524D\u7236\u8282\u70B9\u53F3\u5B50\u6811\u94FE\u63A5\u5F53\u524D\u8282\u70B9\u7684\u53F3\u5B50\u6811</span>
      parent<span class="token punctuation">.</span>right <span class="token operator">=</span> current<span class="token punctuation">.</span>right
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 2.3.\u5220\u9664\u7684\u8282\u70B9\u6709\u4E24\u4E2A\u5B50\u6811\uFF08\u4E24\u4E2A\u5B50\u8282\u70B9\uFF09</span>
    <span class="token comment">// \u627E\u5230\u6700\u63A5\u8FD1current\u7684\u8282\u70B9\u6765\u66FF\u6362current</span>
    <span class="token comment">// \u627E\u540E\u7EE7\u8282\u70B9\uFF1A\u7A0D\u5927\u4E8Ecurrent\u8282\u70B9</span>
    <span class="token comment">// \u627E\u524D\u9A71\u8282\u70B9\uFF1A\u7A0D\u5C0F\u4E8Ecurrent\u8282\u70B9</span>
    <span class="token comment">// \u8FD9\u8FB9\u4F7F\u7528\u67E5\u8BE2\u540E\u7EE7</span>
    <span class="token keyword">var</span> successor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSuccessor</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6839\u8282\u70B9</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">=</span> successor
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isLeftChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      parent<span class="token punctuation">.</span>left <span class="token operator">=</span> successor
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      parent<span class="token punctuation">.</span>right <span class="token operator">=</span> successor
    <span class="token punctuation">}</span>
    successor<span class="token punctuation">.</span>left <span class="token operator">=</span> current<span class="token punctuation">.</span>left
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u627E\u540E\u7EE7\u65B9\u6CD5</span>
<span class="token class-name">BinarySearchTree</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getSuccessor</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">delNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4FDD\u5B58\u627E\u5230\u7684\u540E\u7EE7</span>
  <span class="token keyword">var</span> successor <span class="token operator">=</span> delNode
  <span class="token keyword">var</span> current <span class="token operator">=</span> delNode<span class="token punctuation">.</span>right
  <span class="token comment">// \u7236\u8282\u70B9</span>
  <span class="token keyword">var</span> successorParent <span class="token operator">=</span> delNode
  <span class="token comment">// \u5FAA\u73AF\u67E5\u627E</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    successorParent <span class="token operator">=</span> successor <span class="token comment">// \u66FF\u6362\u7236\u7EA7</span>
    successor <span class="token operator">=</span> current
    current <span class="token operator">=</span> current<span class="token punctuation">.</span>left <span class="token comment">// \u4F9D\u6B21\u5F80\u5DE6\u627E \u6700\u5C0F\u7684</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65AD\u5BFB\u627E\u7684\u540E\u7EE7\u8282\u70B9\u662F\u5426\u76F4\u63A5\u662F\u5220\u9664\u8282\u70B9\u7684\u53F3\u8282\u70B9\uFF0C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>successor <span class="token operator">!=</span> delNode<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7236\u8282\u70B9\u7684\u5DE6\u8282\u70B9\u7B49\u4E8E\u540E\u7EE7\u5143\u7D20\u7684\u53F3\u8282\u70B9</span>
    successorParent<span class="token punctuation">.</span>left <span class="token operator">=</span> successor<span class="token punctuation">.</span>right
    <span class="token comment">// \u66FF\u6362\u5F53\u524D\u540E\u7EE7\u5143\u7D20\u7684\u53F3\u8282\u70B9\u4E3A\u5220\u9664\u8282\u70B9\u7684\u53F3\u5B50\u6811</span>
    successor<span class="token punctuation">.</span>right <span class="token operator">=</span> delNode<span class="token punctuation">.</span>right
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> successor
<span class="token punctuation">}</span>
<span class="token keyword">var</span> bst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BinarySearchTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6D4B\u8BD5\u63D2\u5165\u4EE3\u7801</span>
<span class="token keyword">function</span> <span class="token function">insertTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
  bst<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">insertTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6D4B\u8BD5\u5148\u5E8F\u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">preOrderTraversalTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 11=&gt;7=&gt;5=&gt;3=&gt;6=&gt;9=&gt;8=&gt;10=&gt;15=&gt;13=&gt;12=&gt;14=&gt;20=&gt;18=&gt;25</span>
  <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;\u5148\u5E8F\u904D\u5386=&gt;&#39;</span>
  bst<span class="token punctuation">.</span><span class="token function">preOrderTraversal</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">+=</span> key <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6D4B\u8BD5\u4E2D\u5E8F\u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">midOrderTraversalTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 3=&gt;5=&gt;6=&gt;7=&gt;8=&gt;9=&gt;10=&gt;11=&gt;12=&gt;13=&gt;14=&gt;15=&gt;18=&gt;20=&gt;25</span>
  <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;\u4E2D\u5E8F\u904D\u5386=&gt;&#39;</span>
  bst<span class="token punctuation">.</span><span class="token function">midOrderTraversal</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">+=</span> key <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6D4B\u8BD5\u540E\u5E8F\u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">postOrderTraversalTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 3=&gt;6=&gt;5=&gt;8=&gt;10=&gt;9=&gt;7=&gt;12=&gt;14=&gt;13=&gt;18=&gt;25=&gt;20=&gt;15=&gt;11</span>
  <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;\u540E\u5E8F\u904D\u5386=&gt;&#39;</span>
  bst<span class="token punctuation">.</span><span class="token function">postOrderTraversal</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">+=</span> key <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br></div></div><h2 id="\u5E73\u8861\u641C\u7D22\u6811" tabindex="-1"><a class="header-anchor" href="#\u5E73\u8861\u641C\u7D22\u6811" aria-hidden="true">#</a> \u5E73\u8861\u641C\u7D22\u6811</h2><h3 id="\u4E8C\u53C9\u6811\u7684\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u4F18\u70B9" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u4F18\u70B9</h3><ul><li>\u67E5\u627E\u6548\u7387\u9AD8\uFF0C\u4E8C\u5206\u6CD5\u4E5F\u662F\u4F7F\u7528\u4E86\u8BE5\u7279\u6027 =&gt;O(logN)</li><li>\u5FEB\u901F\u548C\u5220\u9664\uFF0C\u53D6\u51B3\u6811\u7684\u6DF1\u5EA6</li></ul><h3 id="\u4E8C\u53C9\u6811\u7684\u7F3A\u9677" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u7F3A\u9677" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u7F3A\u9677</h3><div class="custom-container tip"><p class="custom-container-title">\u4EC0\u4E48\u662F\u5E73\u8861\u6811</p><p>\u5982\u679C\u5206\u5E03\u5747\u5300\u4E3A\u5E73\u8861\u6811</p></div><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>\u5982\u679C\u5F62\u6210\u4E86\u4E0D\u5E73\u8861\u6811\uFF0C\u4E0D\u5982\u4F7F\u7528\u94FE\u8868\u6570\u636E\u5F62\u5F0F</p></div><p>\u5982\u679C\u63D2\u5165\u7684\u6570\u636E\u662F\u6709\u5E8F\u6570\u636E,\u6DF1\u5EA6\u4F1A\u5F88\u5927,\u4E0B\u9762\u7684\u662F\u4E00\u4E2A\u975E\u5E73\u8861\u6811\uFF0C</p><p>\u4F20\u5165 7 6 5 4 3</p><p><img src="`+p+'" alt="\u4E8C\u53C9\u6811\u7684\u7F3A\u9677"></p>',26);function o(c,l){return t}var u=n(e,[["render",o]]);export{u as default};
